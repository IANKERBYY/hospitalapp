{"ast":null,"code":"import React from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import Image from\"react-native-web/dist/exports/Image\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import{COLORS,FONTS,SPACING,SHADOWS}from'../../styles/theme';import{Ionicons}from'@expo/vector-icons';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Card=({title,subtitle,description,image,status,statusColor,rightIcon,onPress,style,imageStyle,badges=[]})=>{const getStatusColor=()=>{if(statusColor)return statusColor;switch(status?.toUpperCase()){case'AVAILABLE':return COLORS.success;case'IN_USE':return COLORS.primary;case'UNDER_MAINTENANCE':return COLORS.warning;case'OUT_OF_ORDER':return COLORS.danger;default:return COLORS.gray[500];}};const renderBadges=()=>{return badges.map((badge,index)=>_jsx(View,{style:[styles.badge,{backgroundColor:badge.color||COLORS.primary}],children:_jsx(Text,{style:styles.badgeText,children:badge.text})},index));};const CardContent=()=>_jsxs(View,{style:[styles.container,style],children:[image&&_jsx(Image,{source:{uri:image},style:[styles.image,imageStyle],resizeMode:\"cover\"}),_jsxs(View,{style:styles.content,children:[_jsxs(View,{style:styles.header,children:[_jsxs(View,{style:styles.titleContainer,children:[_jsx(Text,{style:styles.title,numberOfLines:1,children:title}),status&&_jsx(View,{style:[styles.status,{backgroundColor:getStatusColor()}],children:_jsx(Text,{style:styles.statusText,children:status})})]}),rightIcon&&_jsx(Ionicons,{name:rightIcon,size:24,color:COLORS.gray[500],style:styles.rightIcon})]}),subtitle&&_jsx(Text,{style:styles.subtitle,children:subtitle}),description&&_jsx(Text,{style:styles.description,numberOfLines:2,children:description}),badges.length>0&&_jsx(View,{style:styles.badgeContainer,children:renderBadges()})]})]});if(onPress){return _jsx(TouchableOpacity,{onPress:onPress,activeOpacity:0.7,children:_jsx(CardContent,{})});}return _jsx(CardContent,{});};const styles=StyleSheet.create({container:Object.assign({backgroundColor:COLORS.white,borderRadius:12,overflow:'hidden'},SHADOWS.md),image:{width:'100%',height:150},content:{padding:SPACING.md},header:{flexDirection:'row',justifyContent:'space-between',alignItems:'flex-start'},titleContainer:{flex:1,flexDirection:'row',alignItems:'center',flexWrap:'wrap'},title:Object.assign({},FONTS.bold,{fontSize:FONTS.sizes.lg,color:COLORS.gray[900],marginRight:SPACING.sm,flex:1}),subtitle:Object.assign({},FONTS.regular,{fontSize:FONTS.sizes.md,color:COLORS.gray[600],marginTop:SPACING.xs}),description:Object.assign({},FONTS.regular,{fontSize:FONTS.sizes.sm,color:COLORS.gray[500],marginTop:SPACING.xs}),status:{paddingHorizontal:SPACING.sm,paddingVertical:SPACING.xs,borderRadius:16,marginLeft:SPACING.xs},statusText:Object.assign({},FONTS.medium,{fontSize:FONTS.sizes.xs,color:COLORS.white,textTransform:'uppercase'}),rightIcon:{marginLeft:SPACING.sm},badgeContainer:{flexDirection:'row',flexWrap:'wrap',marginTop:SPACING.sm},badge:{paddingHorizontal:SPACING.sm,paddingVertical:SPACING.xs,borderRadius:16,marginRight:SPACING.xs,marginBottom:SPACING.xs},badgeText:Object.assign({},FONTS.medium,{fontSize:FONTS.sizes.xs,color:COLORS.white})});export default Card;","map":{"version":3,"names":["React","View","Text","Image","StyleSheet","TouchableOpacity","COLORS","FONTS","SPACING","SHADOWS","Ionicons","jsx","_jsx","jsxs","_jsxs","Card","title","subtitle","description","image","status","statusColor","rightIcon","onPress","style","imageStyle","badges","getStatusColor","toUpperCase","success","primary","warning","danger","gray","renderBadges","map","badge","index","styles","backgroundColor","color","children","badgeText","text","CardContent","container","source","uri","resizeMode","content","header","titleContainer","numberOfLines","statusText","name","size","length","badgeContainer","activeOpacity","create","Object","assign","white","borderRadius","overflow","md","width","height","padding","flexDirection","justifyContent","alignItems","flex","flexWrap","bold","fontSize","sizes","lg","marginRight","sm","regular","marginTop","xs","paddingHorizontal","paddingVertical","marginLeft","medium","textTransform","marginBottom"],"sources":["C:/Users/pablo/HospitalApp/src/components/common/Card.js"],"sourcesContent":["import React from 'react';\r\nimport { View, Text, Image, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { COLORS, FONTS, SPACING, SHADOWS } from '../../styles/theme';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nconst Card = ({\r\n  title,\r\n  subtitle,\r\n  description,\r\n  image,\r\n  status,\r\n  statusColor,\r\n  rightIcon,\r\n  onPress,\r\n  style,\r\n  imageStyle,\r\n  badges = [],\r\n}) => {\r\n  const getStatusColor = () => {\r\n    if (statusColor) return statusColor;\r\n    switch (status?.toUpperCase()) {\r\n      case 'AVAILABLE':\r\n        return COLORS.success;\r\n      case 'IN_USE':\r\n        return COLORS.primary;\r\n      case 'UNDER_MAINTENANCE':\r\n        return COLORS.warning;\r\n      case 'OUT_OF_ORDER':\r\n        return COLORS.danger;\r\n      default:\r\n        return COLORS.gray[500];\r\n    }\r\n  };\r\n\r\n  const renderBadges = () => {\r\n    return badges.map((badge, index) => (\r\n      <View\r\n        key={index}\r\n        style={[\r\n          styles.badge,\r\n          { backgroundColor: badge.color || COLORS.primary },\r\n        ]}\r\n      >\r\n        <Text style={styles.badgeText}>{badge.text}</Text>\r\n      </View>\r\n    ));\r\n  };\r\n\r\n  const CardContent = () => (\r\n    <View style={[styles.container, style]}>\r\n      {image && (\r\n        <Image\r\n          source={{ uri: image }}\r\n          style={[styles.image, imageStyle]}\r\n          resizeMode=\"cover\"\r\n        />\r\n      )}\r\n      <View style={styles.content}>\r\n        <View style={styles.header}>\r\n          <View style={styles.titleContainer}>\r\n            <Text style={styles.title} numberOfLines={1}>\r\n              {title}\r\n            </Text>\r\n            {status && (\r\n              <View\r\n                style={[styles.status, { backgroundColor: getStatusColor() }]}\r\n              >\r\n                <Text style={styles.statusText}>{status}</Text>\r\n              </View>\r\n            )}\r\n          </View>\r\n          {rightIcon && (\r\n            <Ionicons\r\n              name={rightIcon}\r\n              size={24}\r\n              color={COLORS.gray[500]}\r\n              style={styles.rightIcon}\r\n            />\r\n          )}\r\n        </View>\r\n        {subtitle && <Text style={styles.subtitle}>{subtitle}</Text>}\r\n        {description && (\r\n          <Text style={styles.description} numberOfLines={2}>\r\n            {description}\r\n          </Text>\r\n        )}\r\n        {badges.length > 0 && <View style={styles.badgeContainer}>{renderBadges()}</View>}\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  if (onPress) {\r\n    return (\r\n      <TouchableOpacity onPress={onPress} activeOpacity={0.7}>\r\n        <CardContent />\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n\r\n  return <CardContent />;\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: COLORS.white,\r\n    borderRadius: 12,\r\n    overflow: 'hidden',\r\n    ...SHADOWS.md,\r\n  },\r\n  image: {\r\n    width: '100%',\r\n    height: 150,\r\n  },\r\n  content: {\r\n    padding: SPACING.md,\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'flex-start',\r\n  },\r\n  titleContainer: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    flexWrap: 'wrap',\r\n  },\r\n  title: {\r\n    ...FONTS.bold,\r\n    fontSize: FONTS.sizes.lg,\r\n    color: COLORS.gray[900],\r\n    marginRight: SPACING.sm,\r\n    flex: 1,\r\n  },\r\n  subtitle: {\r\n    ...FONTS.regular,\r\n    fontSize: FONTS.sizes.md,\r\n    color: COLORS.gray[600],\r\n    marginTop: SPACING.xs,\r\n  },\r\n  description: {\r\n    ...FONTS.regular,\r\n    fontSize: FONTS.sizes.sm,\r\n    color: COLORS.gray[500],\r\n    marginTop: SPACING.xs,\r\n  },\r\n  status: {\r\n    paddingHorizontal: SPACING.sm,\r\n    paddingVertical: SPACING.xs,\r\n    borderRadius: 16,\r\n    marginLeft: SPACING.xs,\r\n  },\r\n  statusText: {\r\n    ...FONTS.medium,\r\n    fontSize: FONTS.sizes.xs,\r\n    color: COLORS.white,\r\n    textTransform: 'uppercase',\r\n  },\r\n  rightIcon: {\r\n    marginLeft: SPACING.sm,\r\n  },\r\n  badgeContainer: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    marginTop: SPACING.sm,\r\n  },\r\n  badge: {\r\n    paddingHorizontal: SPACING.sm,\r\n    paddingVertical: SPACING.xs,\r\n    borderRadius: 16,\r\n    marginRight: SPACING.xs,\r\n    marginBottom: SPACING.xs,\r\n  },\r\n  badgeText: {\r\n    ...FONTS.medium,\r\n    fontSize: FONTS.sizes.xs,\r\n    color: COLORS.white,\r\n  },\r\n});\r\n\r\nexport default Card;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}