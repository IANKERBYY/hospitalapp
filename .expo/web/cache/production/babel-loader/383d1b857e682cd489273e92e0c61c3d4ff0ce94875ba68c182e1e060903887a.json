{"ast":null,"code":"import{ContinousBaseGesture}from'./gesture';function changeEventCalculator(current,_previous){'worklet';return current;}export class ManualGesture extends ContinousBaseGesture{constructor(){super();this.handlerName='ManualGestureHandler';}onChange(callback){this.handlers.changeEventCalculator=changeEventCalculator;return super.onChange(callback);}}","map":{"version":3,"names":["ContinousBaseGesture","changeEventCalculator","current","_previous","ManualGesture","constructor","handlerName","onChange","callback","handlers"],"sources":["C:\\Users\\pablo\\HospitalApp\\node_modules\\react-native-gesture-handler\\lib\\module\\handlers\\gestures\\manualGesture.ts"],"sourcesContent":["import { GestureUpdateEvent } from '../gestureHandlerCommon';\nimport { ContinousBaseGesture } from './gesture';\n\nfunction changeEventCalculator(\n  current: GestureUpdateEvent<Record<string, never>>,\n  _previous?: GestureUpdateEvent<Record<string, never>>\n) {\n  'worklet';\n  return current;\n}\n\nexport class ManualGesture extends ContinousBaseGesture<\n  Record<string, never>,\n  Record<string, never>\n> {\n  constructor() {\n    super();\n\n    this.handlerName = 'ManualGestureHandler';\n  }\n\n  onChange(\n    callback: (event: GestureUpdateEvent<Record<string, never>>) => void\n  ) {\n    // @ts-ignore TS being overprotective, Record<string, never> is Record\n    this.handlers.changeEventCalculator = changeEventCalculator;\n    return super.onChange(callback);\n  }\n}\n\nexport type ManualGestureType = InstanceType<typeof ManualGesture>;\n"],"mappings":"AACA,OAASA,oBAAT,KAAqC,WAArC,CAEA,QAAS,CAAAC,qBAATA,CACEC,OADF,CAEEC,SAFF,CAGE,CACA,UACA,MAAO,CAAAD,OAAP,CACD,CAED,MAAO,MAAM,CAAAE,aAAN,QAA4B,CAAAJ,oBAGjC,CACAK,WAAWA,CAAA,CAAG,CACZ,QAEA,KAAKC,WAAL,CAAmB,sBAAnB,CACD,CAEDC,QAAQA,CACNC,QADM,CAEN,CAEA,KAAKC,QAAL,CAAcR,qBAAd,CAAsCA,qBAAtC,CACA,MAAO,OAAMM,QAAN,CAAeC,QAAf,CAAP,CACD,CAbD","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}