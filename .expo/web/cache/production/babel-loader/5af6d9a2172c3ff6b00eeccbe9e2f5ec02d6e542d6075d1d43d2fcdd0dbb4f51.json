{"ast":null,"code":"import React,{useState}from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import KeyboardAvoidingView from\"react-native-web/dist/exports/KeyboardAvoidingView\";import Platform from\"react-native-web/dist/exports/Platform\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import Image from\"react-native-web/dist/exports/Image\";import{COLORS,FONTS,SPACING}from'../../styles/theme';import{useAuth}from'../../contexts/AuthContext';import Button from'../../components/common/Button';import Input from'../../components/common/Input';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const LoginScreen=()=>{const[credentials,setCredentials]=useState({username:'',password:''});const[error,setError]=useState('');const[loading,setLoading]=useState(false);const{login}=useAuth();const handleLogin=async()=>{if(!credentials.username||!credentials.password){setError('Please enter both username and password');return;}setError('');setLoading(true);try{const result=await login(credentials.username,credentials.password);if(!result.success){setError(result.error||'Invalid credentials');}}catch(err){setError('An error occurred during login');}finally{setLoading(false);}};return _jsx(KeyboardAvoidingView,{behavior:false?'padding':'height',style:styles.container,children:_jsx(ScrollView,{contentContainerStyle:styles.scrollContent,keyboardShouldPersistTaps:\"handled\",children:_jsxs(View,{style:styles.content,children:[_jsx(Image,{source:{uri:'https://images.pexels.com/photos/247786/pexels-photo-247786.jpeg'},style:styles.logo,resizeMode:\"contain\"}),_jsxs(View,{style:styles.form,children:[_jsx(Input,{label:\"Username\",value:credentials.username,onChangeText:text=>{setCredentials(prev=>Object.assign({},prev,{username:text}));setError('');},placeholder:\"Enter your username\",leftIcon:\"person-outline\",autoCapitalize:\"none\",error:error?' ':''}),_jsx(Input,{label:\"Password\",value:credentials.password,onChangeText:text=>{setCredentials(prev=>Object.assign({},prev,{password:text}));setError('');},placeholder:\"Enter your password\",leftIcon:\"lock-closed-outline\",secureTextEntry:true,error:error}),_jsx(Button,{title:\"Login\",onPress:handleLogin,loading:loading,fullWidth:true,style:styles.loginButton}),_jsxs(View,{style:styles.demoCredentials,children:[_jsx(Button,{title:\"Demo Admin\",onPress:()=>{setCredentials({username:'admin',password:'admin123'});},variant:\"outline\",size:\"sm\",style:styles.demoButton}),_jsx(Button,{title:\"Demo Tech\",onPress:()=>{setCredentials({username:'tech',password:'tech123'});},variant:\"outline\",size:\"sm\",style:styles.demoButton}),_jsx(Button,{title:\"Demo Staff\",onPress:()=>{setCredentials({username:'nurse',password:'nurse123'});},variant:\"outline\",size:\"sm\",style:styles.demoButton})]})]})]})})});};const styles=StyleSheet.create({container:{flex:1,backgroundColor:COLORS.background},scrollContent:{flexGrow:1},content:{flex:1,padding:SPACING.xl,justifyContent:'center'},logo:{width:'100%',height:120,marginBottom:SPACING.xl},form:{backgroundColor:COLORS.white,padding:SPACING.xl,borderRadius:12,shadowColor:COLORS.black,shadowOffset:{width:0,height:2},shadowOpacity:0.25,shadowRadius:3.84,elevation:5},loginButton:{marginTop:SPACING.md},demoCredentials:{marginTop:SPACING.xl,flexDirection:'row',justifyContent:'space-between'},demoButton:{flex:1,marginHorizontal:SPACING.xs}});export default LoginScreen;","map":{"version":3,"names":["React","useState","View","StyleSheet","KeyboardAvoidingView","Platform","ScrollView","Image","COLORS","FONTS","SPACING","useAuth","Button","Input","jsx","_jsx","jsxs","_jsxs","LoginScreen","credentials","setCredentials","username","password","error","setError","loading","setLoading","login","handleLogin","result","success","err","behavior","style","styles","container","children","contentContainerStyle","scrollContent","keyboardShouldPersistTaps","content","source","uri","logo","resizeMode","form","label","value","onChangeText","text","prev","Object","assign","placeholder","leftIcon","autoCapitalize","secureTextEntry","title","onPress","fullWidth","loginButton","demoCredentials","variant","size","demoButton","create","flex","backgroundColor","background","flexGrow","padding","xl","justifyContent","width","height","marginBottom","white","borderRadius","shadowColor","black","shadowOffset","shadowOpacity","shadowRadius","elevation","marginTop","md","flexDirection","marginHorizontal","xs"],"sources":["C:/Users/pablo/HospitalApp/src/screens/Auth/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  ScrollView,\r\n  Image,\r\n} from 'react-native';\r\nimport { COLORS, FONTS, SPACING } from '../../styles/theme';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport Button from '../../components/common/Button';\r\nimport Input from '../../components/common/Input';\r\n\r\nconst LoginScreen = () => {\r\n  const [credentials, setCredentials] = useState({\r\n    username: '',\r\n    password: '',\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const { login } = useAuth();\r\n\r\n  const handleLogin = async () => {\r\n    if (!credentials.username || !credentials.password) {\r\n      setError('Please enter both username and password');\r\n      return;\r\n    }\r\n\r\n    setError('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      const result = await login(credentials.username, credentials.password);\r\n      if (!result.success) {\r\n        setError(result.error || 'Invalid credentials');\r\n      }\r\n    } catch (err) {\r\n      setError('An error occurred during login');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n      style={styles.container}\r\n    >\r\n      <ScrollView\r\n        contentContainerStyle={styles.scrollContent}\r\n        keyboardShouldPersistTaps=\"handled\"\r\n      >\r\n        <View style={styles.content}>\r\n          <Image\r\n            source={{ uri: 'https://images.pexels.com/photos/247786/pexels-photo-247786.jpeg' }}\r\n            style={styles.logo}\r\n            resizeMode=\"contain\"\r\n          />\r\n          \r\n          <View style={styles.form}>\r\n            <Input\r\n              label=\"Username\"\r\n              value={credentials.username}\r\n              onChangeText={(text) => {\r\n                setCredentials((prev) => ({ ...prev, username: text }));\r\n                setError('');\r\n              }}\r\n              placeholder=\"Enter your username\"\r\n              leftIcon=\"person-outline\"\r\n              autoCapitalize=\"none\"\r\n              error={error ? ' ' : ''}\r\n            />\r\n\r\n            <Input\r\n              label=\"Password\"\r\n              value={credentials.password}\r\n              onChangeText={(text) => {\r\n                setCredentials((prev) => ({ ...prev, password: text }));\r\n                setError('');\r\n              }}\r\n              placeholder=\"Enter your password\"\r\n              leftIcon=\"lock-closed-outline\"\r\n              secureTextEntry\r\n              error={error}\r\n            />\r\n\r\n            <Button\r\n              title=\"Login\"\r\n              onPress={handleLogin}\r\n              loading={loading}\r\n              fullWidth\r\n              style={styles.loginButton}\r\n            />\r\n\r\n            <View style={styles.demoCredentials}>\r\n              <Button\r\n                title=\"Demo Admin\"\r\n                onPress={() => {\r\n                  setCredentials({ username: 'admin', password: 'admin123' });\r\n                }}\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                style={styles.demoButton}\r\n              />\r\n              <Button\r\n                title=\"Demo Tech\"\r\n                onPress={() => {\r\n                  setCredentials({ username: 'tech', password: 'tech123' });\r\n                }}\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                style={styles.demoButton}\r\n              />\r\n              <Button\r\n                title=\"Demo Staff\"\r\n                onPress={() => {\r\n                  setCredentials({ username: 'nurse', password: 'nurse123' });\r\n                }}\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                style={styles.demoButton}\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: COLORS.background,\r\n  },\r\n  scrollContent: {\r\n    flexGrow: 1,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    padding: SPACING.xl,\r\n    justifyContent: 'center',\r\n  },\r\n  logo: {\r\n    width: '100%',\r\n    height: 120,\r\n    marginBottom: SPACING.xl,\r\n  },\r\n  form: {\r\n    backgroundColor: COLORS.white,\r\n    padding: SPACING.xl,\r\n    borderRadius: 12,\r\n    shadowColor: COLORS.black,\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  },\r\n  loginButton: {\r\n    marginTop: SPACING.md,\r\n  },\r\n  demoCredentials: {\r\n    marginTop: SPACING.xl,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  demoButton: {\r\n    flex: 1,\r\n    marginHorizontal: SPACING.xs,\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}