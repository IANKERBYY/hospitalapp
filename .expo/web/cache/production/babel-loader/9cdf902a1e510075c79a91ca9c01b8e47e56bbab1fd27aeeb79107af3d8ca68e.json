{"ast":null,"code":"import React,{useEffect}from'react';import{NavigationContainer}from'@react-navigation/native';import{createStackNavigator}from'@react-navigation/stack';import{createBottomTabNavigator}from'@react-navigation/bottom-tabs';import{useAuth}from'../contexts/AuthContext';import{USER_ROLES}from'../data/mockData';import{Ionicons}from'@expo/vector-icons';import{COLORS}from'../styles/theme';import LoginScreen from'../screens/Auth/LoginScreen';import EquipmentListScreen from'../screens/Equipment/EquipmentListScreen';import EquipmentDetailsScreen from'../screens/Equipment/EquipmentDetailsScreen';import QRScannerScreen from'../screens/QRScanner/QRScannerScreen';import ReportsScreen from'../screens/Report/ReportsScreen';import CreateReportScreen from'../screens/Report/CreateReportScreen';import AdminDashboardScreen from'../screens/Admin/AdminDashboardScreen';import TechnicianDashboardScreen from'../screens/Technician/TechnicianDashboardScreen';import ProfileScreen from'../screens/Profile/ProfileScreen';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Stack=createStackNavigator();const Tab=createBottomTabNavigator();const MainTabNavigator=()=>{const{user}=useAuth();const getTabNavigator=()=>{switch(user?.role){case USER_ROLES.ADMIN:return _jsxs(Tab.Navigator,{screenOptions:({route})=>({tabBarIcon:({focused,color})=>{let iconName;if(route.name==='Dashboard'){iconName=focused?'grid':'grid-outline';}else if(route.name==='Equipment'){iconName=focused?'medical':'medical-outline';}else if(route.name==='Reports'){iconName=focused?'document-text':'document-text-outline';}else if(route.name==='Profile'){iconName=focused?'person':'person-outline';}return _jsx(Ionicons,{name:iconName,size:24,color:color});},tabBarActiveTintColor:COLORS.primary,tabBarInactiveTintColor:COLORS.gray[400],tabBarStyle:{backgroundColor:COLORS.white,borderTopWidth:1,borderTopColor:COLORS.gray[200],paddingBottom:5,paddingTop:5}}),children:[_jsx(Tab.Screen,{name:\"Dashboard\",component:AdminDashboardScreen}),_jsx(Tab.Screen,{name:\"Equipment\",component:EquipmentListScreen}),_jsx(Tab.Screen,{name:\"Reports\",component:ReportsScreen}),_jsx(Tab.Screen,{name:\"Profile\",component:ProfileScreen})]});case USER_ROLES.TECHNICIAN:return _jsxs(Tab.Navigator,{screenOptions:({route})=>({tabBarIcon:({focused,color})=>{let iconName;if(route.name==='Dashboard'){iconName=focused?'grid':'grid-outline';}else if(route.name==='Equipment'){iconName=focused?'medical':'medical-outline';}else if(route.name==='Scan'){iconName=focused?'qr-code':'qr-code-outline';}else if(route.name==='Profile'){iconName=focused?'person':'person-outline';}return _jsx(Ionicons,{name:iconName,size:24,color:color});}}),children:[_jsx(Tab.Screen,{name:\"Dashboard\",component:TechnicianDashboardScreen}),_jsx(Tab.Screen,{name:\"Equipment\",component:EquipmentListScreen}),_jsx(Tab.Screen,{name:\"Scan\",component:QRScannerScreen}),_jsx(Tab.Screen,{name:\"Profile\",component:ProfileScreen})]});default:return _jsxs(Tab.Navigator,{screenOptions:({route})=>({tabBarIcon:({focused,color})=>{let iconName;if(route.name==='Equipment'){iconName=focused?'medical':'medical-outline';}else if(route.name==='Scan'){iconName=focused?'qr-code':'qr-code-outline';}else if(route.name==='Reports'){iconName=focused?'document-text':'document-text-outline';}else if(route.name==='Profile'){iconName=focused?'person':'person-outline';}return _jsx(Ionicons,{name:iconName,size:24,color:color});}}),children:[_jsx(Tab.Screen,{name:\"Equipment\",component:EquipmentListScreen}),_jsx(Tab.Screen,{name:\"Scan\",component:QRScannerScreen}),_jsx(Tab.Screen,{name:\"Reports\",component:ReportsScreen}),_jsx(Tab.Screen,{name:\"Profile\",component:ProfileScreen})]});}};return getTabNavigator();};const AppNavigator=()=>{const{isAuthenticated,loading}=useAuth();useEffect(()=>{console.log('[AppNavigator] Auth state updated',{isAuthenticated,loading});},[isAuthenticated,loading]);if(loading){return null;}return _jsx(NavigationContainer,{children:_jsx(Stack.Navigator,{children:isAuthenticated?_jsx(Stack.Screen,{name:\"MainApp\",component:MainTabNavigator,options:{headerShown:false}}):_jsx(Stack.Screen,{name:\"Login\",component:LoginScreen,options:{headerShown:false,animationTypeForReplace:isAuthenticated?'push':'pop'}})})});};export default AppNavigator;","map":{"version":3,"names":["React","useEffect","NavigationContainer","createStackNavigator","createBottomTabNavigator","useAuth","USER_ROLES","Ionicons","COLORS","LoginScreen","EquipmentListScreen","EquipmentDetailsScreen","QRScannerScreen","ReportsScreen","CreateReportScreen","AdminDashboardScreen","TechnicianDashboardScreen","ProfileScreen","jsx","_jsx","jsxs","_jsxs","Stack","Tab","MainTabNavigator","user","getTabNavigator","role","ADMIN","Navigator","screenOptions","route","tabBarIcon","focused","color","iconName","name","size","tabBarActiveTintColor","primary","tabBarInactiveTintColor","gray","tabBarStyle","backgroundColor","white","borderTopWidth","borderTopColor","paddingBottom","paddingTop","children","Screen","component","TECHNICIAN","AppNavigator","isAuthenticated","loading","console","log","options","headerShown","animationTypeForReplace"],"sources":["C:/Users/pablo/HospitalApp/src/navigation/AppNavigator.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { USER_ROLES } from '../data/mockData';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { COLORS } from '../styles/theme';\r\n\r\n// Import all screens\r\nimport LoginScreen from '../screens/Auth/LoginScreen';\r\nimport EquipmentListScreen from '../screens/Equipment/EquipmentListScreen';\r\nimport EquipmentDetailsScreen from '../screens/Equipment/EquipmentDetailsScreen';\r\nimport QRScannerScreen from '../screens/QRScanner/QRScannerScreen';\r\nimport ReportsScreen from '../screens/Report/ReportsScreen';\r\nimport CreateReportScreen from '../screens/Report/CreateReportScreen';\r\nimport AdminDashboardScreen from '../screens/Admin/AdminDashboardScreen';\r\nimport TechnicianDashboardScreen from '../screens/Technician/TechnicianDashboardScreen';\r\nimport ProfileScreen from '../screens/Profile/ProfileScreen';\r\n\r\nconst Stack = createStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\n// Tab Navigator Component\r\nconst MainTabNavigator = () => {\r\n  const { user } = useAuth();\r\n\r\n  const getTabNavigator = () => {\r\n    switch(user?.role) {\r\n      case USER_ROLES.ADMIN:\r\n        return (\r\n          <Tab.Navigator\r\n            screenOptions={({ route }) => ({\r\n              tabBarIcon: ({ focused, color }) => {\r\n                let iconName;\r\n                if (route.name === 'Dashboard') {\r\n                  iconName = focused ? 'grid' : 'grid-outline';\r\n                } else if (route.name === 'Equipment') {\r\n                  iconName = focused ? 'medical' : 'medical-outline';\r\n                } else if (route.name === 'Reports') {\r\n                  iconName = focused ? 'document-text' : 'document-text-outline';\r\n                } else if (route.name === 'Profile') {\r\n                  iconName = focused ? 'person' : 'person-outline';\r\n                }\r\n                return <Ionicons name={iconName} size={24} color={color} />;\r\n              },\r\n              tabBarActiveTintColor: COLORS.primary,\r\n              tabBarInactiveTintColor: COLORS.gray[400],\r\n              tabBarStyle: {\r\n                backgroundColor: COLORS.white,\r\n                borderTopWidth: 1,\r\n                borderTopColor: COLORS.gray[200],\r\n                paddingBottom: 5,\r\n                paddingTop: 5,\r\n              },\r\n            })}\r\n          >\r\n            <Tab.Screen name=\"Dashboard\" component={AdminDashboardScreen} />\r\n            <Tab.Screen name=\"Equipment\" component={EquipmentListScreen} />\r\n            <Tab.Screen name=\"Reports\" component={ReportsScreen} />\r\n            <Tab.Screen name=\"Profile\" component={ProfileScreen} />\r\n          </Tab.Navigator>\r\n        );\r\n      \r\n      case USER_ROLES.TECHNICIAN:\r\n        return (\r\n          <Tab.Navigator\r\n            screenOptions={({ route }) => ({\r\n              tabBarIcon: ({ focused, color }) => {\r\n                let iconName;\r\n                if (route.name === 'Dashboard') {\r\n                  iconName = focused ? 'grid' : 'grid-outline';\r\n                } else if (route.name === 'Equipment') {\r\n                  iconName = focused ? 'medical' : 'medical-outline';\r\n                } else if (route.name === 'Scan') {\r\n                  iconName = focused ? 'qr-code' : 'qr-code-outline';\r\n                } else if (route.name === 'Profile') {\r\n                  iconName = focused ? 'person' : 'person-outline';\r\n                }\r\n                return <Ionicons name={iconName} size={24} color={color} />;\r\n              },\r\n              // Same style options as above\r\n            })}\r\n          >\r\n            <Tab.Screen name=\"Dashboard\" component={TechnicianDashboardScreen} />\r\n            <Tab.Screen name=\"Equipment\" component={EquipmentListScreen} />\r\n            <Tab.Screen name=\"Scan\" component={QRScannerScreen} />\r\n            <Tab.Screen name=\"Profile\" component={ProfileScreen} />\r\n          </Tab.Navigator>\r\n        );\r\n      \r\n      default: // STAFF\r\n        return (\r\n          <Tab.Navigator\r\n            screenOptions={({ route }) => ({\r\n              tabBarIcon: ({ focused, color }) => {\r\n                let iconName;\r\n                if (route.name === 'Equipment') {\r\n                  iconName = focused ? 'medical' : 'medical-outline';\r\n                } else if (route.name === 'Scan') {\r\n                  iconName = focused ? 'qr-code' : 'qr-code-outline';\r\n                } else if (route.name === 'Reports') {\r\n                  iconName = focused ? 'document-text' : 'document-text-outline';\r\n                } else if (route.name === 'Profile') {\r\n                  iconName = focused ? 'person' : 'person-outline';\r\n                }\r\n                return <Ionicons name={iconName} size={24} color={color} />;\r\n              },\r\n              // Same style options as above\r\n            })}\r\n          >\r\n            <Tab.Screen name=\"Equipment\" component={EquipmentListScreen} />\r\n            <Tab.Screen name=\"Scan\" component={QRScannerScreen} />\r\n            <Tab.Screen name=\"Reports\" component={ReportsScreen} />\r\n            <Tab.Screen name=\"Profile\" component={ProfileScreen} />\r\n          </Tab.Navigator>\r\n        );\r\n    }\r\n  };\r\n\r\n  return getTabNavigator();\r\n};\r\n\r\nconst AppNavigator = () => {\r\n  const { isAuthenticated, loading } = useAuth();\r\n\r\n  useEffect(() => {\r\n    console.log('[AppNavigator] Auth state updated', { \r\n      isAuthenticated, \r\n      loading \r\n    });\r\n  }, [isAuthenticated, loading]);\r\n\r\n  if (loading) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator>\r\n        {isAuthenticated ? (\r\n          <Stack.Screen\r\n            name=\"MainApp\"\r\n            component={MainTabNavigator}\r\n            options={{ headerShown: false }}\r\n          />\r\n        ) : (\r\n          <Stack.Screen\r\n            name=\"Login\"\r\n            component={LoginScreen}\r\n            options={{ \r\n              headerShown: false,\r\n              animationTypeForReplace: isAuthenticated ? 'push' : 'pop'\r\n            }}\r\n          />\r\n        )}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default AppNavigator;"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":false},"sourceType":"module","externalDependencies":[]}