{"version":3,"file":"static/js/main.7d4c61af.js","mappings":"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","sources":["src/data/mockData.js","src/contexts/AuthContext.js","src/styles/theme.js","src/components/common/Button.js","src/components/common/Input.js","src/screens/Auth/LoginScreen.js","src/components/common/Card.js","src/screens/Equipment/EquipmentListScreen.js","src/screens/Equipment/EquipmentDetailsScreen.js","src/screens/QRScanner/QRScannerScreen.js","src/screens/Report/ReportsScreen.js","src/screens/Report/CreateReportScreen.js","src/screens/Admin/AdminDashboardScreen.js","src/screens/Technician/TechnicianDashboardScreen.js","src/screens/Profile/ProfileScreen.js","src/navigation/AppNavigator.js","index.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["// Mock Users Data\r\nexport const users = [\r\n    {\r\n      id: '1',\r\n      username: 'admin',\r\n      password: 'admin123', // In real app, passwords would be hashed\r\n      role: 'ADMIN',\r\n      name: 'John Admin',\r\n      email: 'admin@hospital.com'\r\n    },\r\n    {\r\n      id: '2',\r\n      username: 'tech',\r\n      password: 'tech123',\r\n      role: 'TECHNICIAN',\r\n      name: 'Mike Tech',\r\n      email: 'tech@hospital.com'\r\n    },\r\n    {\r\n      id: '3',\r\n      username: 'nurse',\r\n      password: 'nurse123',\r\n      role: 'STAFF',\r\n      name: 'Sarah Nurse',\r\n      email: 'nurse@hospital.com'\r\n    }\r\n  ];\r\n  \r\n  // Mock Equipment Data\r\n  export const equipment = [\r\n    {\r\n      id: '1',\r\n      name: 'Ventilator X2000',\r\n      modelNumber: 'VX2000',\r\n      serialNumber: 'SN20231001',\r\n      department: 'ICU',\r\n      status: 'AVAILABLE',\r\n      dateAcquired: '2023-01-15',\r\n      maintenanceInterval: 30, // days\r\n      lastMaintenance: '2023-09-01',\r\n      nextMaintenance: '2023-10-01',\r\n      assignedTechnician: '2', // references tech user id\r\n      qrCode: 'EQ-VX2000-001',\r\n      image: 'https://images.pexels.com/photos/247786/pexels-photo-247786.jpeg'\r\n    },\r\n    {\r\n      id: '2',\r\n      name: 'MRI Scanner Pro',\r\n      modelNumber: 'MRI-4000',\r\n      serialNumber: 'SN20231002',\r\n      department: 'Radiology',\r\n      status: 'UNDER_MAINTENANCE',\r\n      dateAcquired: '2023-02-20',\r\n      maintenanceInterval: 45,\r\n      lastMaintenance: '2023-08-15',\r\n      nextMaintenance: '2023-09-30',\r\n      assignedTechnician: '2',\r\n      qrCode: 'EQ-MRI4000-002',\r\n      image: 'https://images.pexels.com/photos/4226119/pexels-photo-4226119.jpeg'\r\n    },\r\n    {\r\n      id: '3',\r\n      name: 'Patient Monitor Elite',\r\n      modelNumber: 'PM-ELITE-3',\r\n      serialNumber: 'SN20231003',\r\n      department: 'Emergency',\r\n      status: 'IN_USE',\r\n      dateAcquired: '2023-03-10',\r\n      maintenanceInterval: 60,\r\n      lastMaintenance: '2023-08-30',\r\n      nextMaintenance: '2023-10-30',\r\n      assignedTechnician: '2',\r\n      qrCode: 'EQ-PME3-003',\r\n      image: 'https://images.pexels.com/photos/263402/pexels-photo-263402.jpeg'\r\n    }\r\n  ];\r\n  \r\n  // Mock Maintenance Reports\r\n  export const reports = [\r\n    {\r\n      id: '1',\r\n      equipmentId: '1',\r\n      reporterId: '3',\r\n      description: 'Unusual noise during operation',\r\n      severity: 'HIGH',\r\n      status: 'PENDING',\r\n      dateReported: '2023-09-20',\r\n      imageUrl: 'https://images.pexels.com/photos/4226264/pexels-photo-4226264.jpeg',\r\n      technicianNotes: '',\r\n      estimatedFixTime: null\r\n    },\r\n    {\r\n      id: '2',\r\n      equipmentId: '2',\r\n      reporterId: '3',\r\n      description: 'Calibration needed',\r\n      severity: 'MEDIUM',\r\n      status: 'IN_PROGRESS',\r\n      dateReported: '2023-09-18',\r\n      imageUrl: null,\r\n      technicianNotes: 'Ordered replacement parts',\r\n      estimatedFixTime: '2023-09-25'\r\n    }\r\n  ];\r\n  \r\n  // Mock Notifications\r\n  export const notifications = [\r\n    {\r\n      id: '1',\r\n      userId: '2',\r\n      title: 'New Maintenance Request',\r\n      message: 'Ventilator X2000 requires immediate attention',\r\n      isRead: false,\r\n      createdAt: '2023-09-20T10:30:00Z'\r\n    },\r\n    {\r\n      id: '2',\r\n      userId: '1',\r\n      title: 'Overdue Maintenance',\r\n      message: 'MRI Scanner Pro maintenance is overdue',\r\n      isRead: true,\r\n      createdAt: '2023-09-19T08:15:00Z'\r\n    }\r\n  ];\r\n  \r\n  // Mock Dashboard Data\r\n  export const dashboardData = {\r\n    totalEquipment: 25,\r\n    underMaintenance: 3,\r\n    overdueRepairs: 1,\r\n    monthlyStats: {\r\n      labels: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun'],\r\n      datasets: [\r\n        {\r\n          data: [20, 45, 28, 80, 99, 43]\r\n        }\r\n      ]\r\n    },\r\n    departmentUsage: {\r\n      ICU: 40,\r\n      Radiology: 25,\r\n      Emergency: 20,\r\n      Surgery: 15\r\n    }\r\n  };\r\n  \r\n  // Constants\r\n  export const STATUS_TYPES = {\r\n    AVAILABLE: 'AVAILABLE',\r\n    IN_USE: 'IN_USE',\r\n    UNDER_MAINTENANCE: 'UNDER_MAINTENANCE',\r\n    OUT_OF_ORDER: 'OUT_OF_ORDER'\r\n  };\r\n  \r\n  export const SEVERITY_LEVELS = {\r\n    LOW: 'LOW',\r\n    MEDIUM: 'MEDIUM',\r\n    HIGH: 'HIGH'\r\n  };\r\n  \r\n  export const REPORT_STATUS = {\r\n    PENDING: 'PENDING',\r\n    IN_PROGRESS: 'IN_PROGRESS',\r\n    COMPLETED: 'COMPLETED'\r\n  };\r\n  \r\n  export const USER_ROLES = {\r\n    ADMIN: 'ADMIN',\r\n    TECHNICIAN: 'TECHNICIAN',\r\n    STAFF: 'STAFF'\r\n  };\r\n  ","import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport { users } from '../data/mockData';\r\n\r\nconst AuthContext = createContext({});\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    loadStoredUser();\r\n  }, []);\r\n\r\n  const loadStoredUser = async () => {\r\n    try {\r\n      const storedUser = await AsyncStorage.getItem('@user');\r\n      if (storedUser) {\r\n        setUser(JSON.parse(storedUser));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading stored user:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (username, password) => {\r\n    try {\r\n      // Simulate API call delay\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n      const foundUser = users.find(\r\n        u => u.username === username && u.password === password\r\n      );\r\n\r\n      if (foundUser) {\r\n        const { password: _, ...userWithoutPassword } = foundUser;\r\n        await AsyncStorage.setItem('@user', JSON.stringify(userWithoutPassword));\r\n        setUser(userWithoutPassword);\r\n        return { success: true };\r\n      } else {\r\n        throw new Error('Invalid credentials');\r\n      }\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.message || 'An error occurred during login'\r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await AsyncStorage.removeItem('@user');\r\n      setUser(null);\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    loading,\r\n    login,\r\n    logout,\r\n    isAuthenticated: !!user,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};","export const COLORS = {\r\n    primary: '#2E3A8C',    // Dark Blue\r\n    background: '#F5F7FA', // Light Gray\r\n    text: '#718096',       // Medium Gray\r\n    white: '#FFFFFF',\r\n    danger: '#DC2626',     // Red for errors/alerts\r\n    success: '#059669',    // Green for success states\r\n    warning: '#D97706',    // Orange for warnings\r\n    black: '#1A202C',\r\n    gray: {\r\n      100: '#F7FAFC',\r\n      200: '#EDF2F7',\r\n      300: '#E2E8F0',\r\n      400: '#CBD5E0',\r\n      500: '#A0AEC0',\r\n      600: '#718096',\r\n      700: '#4A5568',\r\n      800: '#2D3748',\r\n      900: '#1A202C',\r\n    }\r\n  };\r\n  \r\n  export const FONTS = {\r\n    regular: {\r\n      fontFamily: 'System',\r\n      fontWeight: '400',\r\n    },\r\n    medium: {\r\n      fontFamily: 'System',\r\n      fontWeight: '500',\r\n    },\r\n    bold: {\r\n      fontFamily: 'System',\r\n      fontWeight: '700',\r\n    },\r\n    sizes: {\r\n      xs: 12,\r\n      sm: 14,\r\n      md: 16,\r\n      lg: 18,\r\n      xl: 20,\r\n      '2xl': 24,\r\n      '3xl': 30,\r\n      '4xl': 36,\r\n    }\r\n  };\r\n  \r\n  export const SPACING = {\r\n    xs: 4,\r\n    sm: 8,\r\n    md: 16,\r\n    lg: 24,\r\n    xl: 32,\r\n    '2xl': 48,\r\n    '3xl': 64,\r\n  };\r\n  \r\n  export const SHADOWS = {\r\n    sm: {\r\n      shadowColor: '#000',\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 1,\r\n      },\r\n      shadowOpacity: 0.18,\r\n      shadowRadius: 1.0,\r\n      elevation: 1,\r\n    },\r\n    md: {\r\n      shadowColor: '#000',\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 2,\r\n      },\r\n      shadowOpacity: 0.25,\r\n      shadowRadius: 3.84,\r\n      elevation: 3,\r\n    },\r\n    lg: {\r\n      shadowColor: '#000',\r\n      shadowOffset: {\r\n        width: 0,\r\n        height: 4,\r\n      },\r\n      shadowOpacity: 0.30,\r\n      shadowRadius: 4.65,\r\n      elevation: 5,\r\n    }\r\n  };\r\n  ","import React from 'react';\r\nimport { TouchableOpacity, Text, ActivityIndicator, StyleSheet } from 'react-native';\r\nimport { COLORS, FONTS, SPACING } from '../../styles/theme';\r\n\r\nconst Button = ({\r\n  title,\r\n  onPress,\r\n  variant = 'primary',\r\n  size = 'md',\r\n  loading = false,\r\n  disabled = false,\r\n  fullWidth = false,\r\n  style,\r\n  textStyle,\r\n}) => {\r\n  const getVariantStyles = () => {\r\n    switch (variant) {\r\n      case 'secondary':\r\n        return {\r\n          backgroundColor: COLORS.gray[200],\r\n          borderColor: COLORS.gray[300],\r\n        };\r\n      case 'outline':\r\n        return {\r\n          backgroundColor: 'transparent',\r\n          borderColor: COLORS.primary,\r\n          borderWidth: 1,\r\n        };\r\n      case 'danger':\r\n        return {\r\n          backgroundColor: COLORS.danger,\r\n        };\r\n      default:\r\n        return {\r\n          backgroundColor: COLORS.primary,\r\n        };\r\n    }\r\n  };\r\n\r\n  const getSizeStyles = () => {\r\n    switch (size) {\r\n      case 'sm':\r\n        return {\r\n          paddingVertical: SPACING.xs,\r\n          paddingHorizontal: SPACING.md,\r\n        };\r\n      case 'lg':\r\n        return {\r\n          paddingVertical: SPACING.md,\r\n          paddingHorizontal: SPACING.xl,\r\n        };\r\n      default:\r\n        return {\r\n          paddingVertical: SPACING.sm,\r\n          paddingHorizontal: SPACING.lg,\r\n        };\r\n    }\r\n  };\r\n\r\n  const getTextColor = () => {\r\n    if (disabled) return COLORS.gray[400];\r\n    switch (variant) {\r\n      case 'secondary':\r\n        return COLORS.gray[800];\r\n      case 'outline':\r\n        return COLORS.primary;\r\n      default:\r\n        return COLORS.white;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TouchableOpacity\r\n      onPress={onPress}\r\n      disabled={disabled || loading}\r\n      style={[\r\n        styles.button,\r\n        getVariantStyles(),\r\n        getSizeStyles(),\r\n        fullWidth && styles.fullWidth,\r\n        disabled && styles.disabled,\r\n        style,\r\n      ]}\r\n    >\r\n      {loading ? (\r\n        <ActivityIndicator color={getTextColor()} />\r\n      ) : (\r\n        <Text\r\n          style={[\r\n            styles.text,\r\n            { color: getTextColor() },\r\n            size === 'sm' && { fontSize: FONTS.sizes.sm },\r\n            size === 'lg' && { fontSize: FONTS.sizes.lg },\r\n            textStyle,\r\n          ]}\r\n        >\r\n          {title}\r\n        </Text>\r\n      )}\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    borderRadius: 8,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n  },\r\n  text: {\r\n    ...FONTS.medium,\r\n    fontSize: FONTS.sizes.md,\r\n    textAlign: 'center',\r\n  },\r\n  fullWidth: {\r\n    width: '100%',\r\n  },\r\n  disabled: {\r\n    opacity: 0.5,\r\n  },\r\n});\r\n\r\nexport default Button;\r\n","import React, { useState } from 'react';\r\nimport { View, TextInput, Text, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { COLORS, FONTS, SPACING } from '../../styles/theme';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nconst Input = ({\r\n  label,\r\n  value,\r\n  onChangeText,\r\n  placeholder,\r\n  error,\r\n  secureTextEntry,\r\n  keyboardType = 'default',\r\n  autoCapitalize = 'none',\r\n  disabled = false,\r\n  style,\r\n  containerStyle,\r\n  leftIcon,\r\n  rightIcon,\r\n  onRightIconPress,\r\n  multiline = false,\r\n  numberOfLines = 1,\r\n}) => {\r\n  const [isPasswordVisible, setIsPasswordVisible] = useState(false);\r\n\r\n  const renderLeftIcon = () => {\r\n    if (!leftIcon) return null;\r\n    return (\r\n      <View style={styles.leftIcon}>\r\n        <Ionicons name={leftIcon} size={20} color={COLORS.gray[500]} />\r\n      </View>\r\n    );\r\n  };\r\n\r\n  const renderRightIcon = () => {\r\n    if (secureTextEntry) {\r\n      return (\r\n        <TouchableOpacity\r\n          style={styles.rightIcon}\r\n          onPress={() => setIsPasswordVisible(!isPasswordVisible)}\r\n        >\r\n          <Ionicons\r\n            name={isPasswordVisible ? 'eye-off-outline' : 'eye-outline'}\r\n            size={20}\r\n            color={COLORS.gray[500]}\r\n          />\r\n        </TouchableOpacity>\r\n      );\r\n    }\r\n\r\n    if (!rightIcon) return null;\r\n    return (\r\n      <TouchableOpacity style={styles.rightIcon} onPress={onRightIconPress}>\r\n        <Ionicons name={rightIcon} size={20} color={COLORS.gray[500]} />\r\n      </TouchableOpacity>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <View style={[styles.container, containerStyle]}>\r\n      {label && <Text style={styles.label}>{label}</Text>}\r\n      <View\r\n        style={[\r\n          styles.inputContainer,\r\n          error && styles.inputError,\r\n          disabled && styles.inputDisabled,\r\n          multiline && styles.multiline,\r\n        ]}\r\n      >\r\n        {renderLeftIcon()}\r\n        <TextInput\r\n          style={[\r\n            styles.input,\r\n            leftIcon && { paddingLeft: 40 },\r\n            (rightIcon || secureTextEntry) && { paddingRight: 40 },\r\n            multiline && styles.multilineInput,\r\n            style,\r\n          ]}\r\n          value={value}\r\n          onChangeText={onChangeText}\r\n          placeholder={placeholder}\r\n          placeholderTextColor={COLORS.gray[400]}\r\n          secureTextEntry={secureTextEntry && !isPasswordVisible}\r\n          keyboardType={keyboardType}\r\n          autoCapitalize={autoCapitalize}\r\n          editable={!disabled}\r\n          multiline={multiline}\r\n          numberOfLines={numberOfLines}\r\n        />\r\n        {renderRightIcon()}\r\n      </View>\r\n      {error && <Text style={styles.errorText}>{error}</Text>}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    marginBottom: SPACING.md,\r\n  },\r\n  label: {\r\n    ...FONTS.medium,\r\n    fontSize: FONTS.sizes.sm,\r\n    color: COLORS.gray[700],\r\n    marginBottom: SPACING.xs,\r\n  },\r\n  inputContainer: {\r\n    backgroundColor: COLORS.white,\r\n    borderRadius: 8,\r\n    borderWidth: 1,\r\n    borderColor: COLORS.gray[300],\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  input: {\r\n    ...FONTS.regular,\r\n    flex: 1,\r\n    color: COLORS.gray[900],\r\n    fontSize: FONTS.sizes.md,\r\n    paddingHorizontal: SPACING.md,\r\n    paddingVertical: SPACING.sm,\r\n    minHeight: 44,\r\n  },\r\n  multiline: {\r\n    minHeight: 100,\r\n  },\r\n  multilineInput: {\r\n    height: 100,\r\n    textAlignVertical: 'top',\r\n  },\r\n  inputError: {\r\n    borderColor: COLORS.danger,\r\n  },\r\n  inputDisabled: {\r\n    backgroundColor: COLORS.gray[100],\r\n    borderColor: COLORS.gray[200],\r\n  },\r\n  errorText: {\r\n    ...FONTS.regular,\r\n    fontSize: FONTS.sizes.sm,\r\n    color: COLORS.danger,\r\n    marginTop: SPACING.xs,\r\n  },\r\n  leftIcon: {\r\n    position: 'absolute',\r\n    left: SPACING.md,\r\n    zIndex: 1,\r\n  },\r\n  rightIcon: {\r\n    position: 'absolute',\r\n    right: SPACING.md,\r\n    zIndex: 1,\r\n  },\r\n});\r\n\r\nexport default Input;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  StyleSheet,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  ScrollView,\r\n  Image,\r\n} from 'react-native';\r\nimport { COLORS, FONTS, SPACING } from '../../styles/theme';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport Button from '../../components/common/Button';\r\nimport Input from '../../components/common/Input';\r\n\r\nconst LoginScreen = () => {\r\n  const [credentials, setCredentials] = useState({\r\n    username: '',\r\n    password: '',\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const { login } = useAuth();\r\n\r\n  const handleLogin = async () => {\r\n    if (!credentials.username || !credentials.password) {\r\n      setError('Please enter both username and password');\r\n      return;\r\n    }\r\n\r\n    setError('');\r\n    setLoading(true);\r\n\r\n    try {\r\n      const result = await login(credentials.username, credentials.password);\r\n      if (!result.success) {\r\n        setError(result.error || 'Invalid credentials');\r\n      }\r\n    } catch (err) {\r\n      setError('An error occurred during login');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      behavior={Platform.OS === 'ios' ? 'padding' : 'height'}\r\n      style={styles.container}\r\n    >\r\n      <ScrollView\r\n        contentContainerStyle={styles.scrollContent}\r\n        keyboardShouldPersistTaps=\"handled\"\r\n      >\r\n        <View style={styles.content}>\r\n          <Image\r\n            source={{ uri: 'https://images.pexels.com/photos/247786/pexels-photo-247786.jpeg' }}\r\n            style={styles.logo}\r\n            resizeMode=\"contain\"\r\n          />\r\n          \r\n          <View style={styles.form}>\r\n            <Input\r\n              label=\"Username\"\r\n              value={credentials.username}\r\n              onChangeText={(text) => {\r\n                setCredentials((prev) => ({ ...prev, username: text }));\r\n                setError('');\r\n              }}\r\n              placeholder=\"Enter your username\"\r\n              leftIcon=\"person-outline\"\r\n              autoCapitalize=\"none\"\r\n              error={error ? ' ' : ''}\r\n            />\r\n\r\n            <Input\r\n              label=\"Password\"\r\n              value={credentials.password}\r\n              onChangeText={(text) => {\r\n                setCredentials((prev) => ({ ...prev, password: text }));\r\n                setError('');\r\n              }}\r\n              placeholder=\"Enter your password\"\r\n              leftIcon=\"lock-closed-outline\"\r\n              secureTextEntry\r\n              error={error}\r\n            />\r\n\r\n            <Button\r\n              title=\"Login\"\r\n              onPress={handleLogin}\r\n              loading={loading}\r\n              fullWidth\r\n              style={styles.loginButton}\r\n            />\r\n\r\n            <View style={styles.demoCredentials}>\r\n              <Button\r\n                title=\"Demo Admin\"\r\n                onPress={() => {\r\n                  setCredentials({ username: 'admin', password: 'admin123' });\r\n                }}\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                style={styles.demoButton}\r\n              />\r\n              <Button\r\n                title=\"Demo Tech\"\r\n                onPress={() => {\r\n                  setCredentials({ username: 'tech', password: 'tech123' });\r\n                }}\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                style={styles.demoButton}\r\n              />\r\n              <Button\r\n                title=\"Demo Staff\"\r\n                onPress={() => {\r\n                  setCredentials({ username: 'nurse', password: 'nurse123' });\r\n                }}\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                style={styles.demoButton}\r\n              />\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </ScrollView>\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: COLORS.background,\r\n  },\r\n  scrollContent: {\r\n    flexGrow: 1,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n    padding: SPACING.xl,\r\n    justifyContent: 'center',\r\n  },\r\n  logo: {\r\n    width: '100%',\r\n    height: 120,\r\n    marginBottom: SPACING.xl,\r\n  },\r\n  form: {\r\n    backgroundColor: COLORS.white,\r\n    padding: SPACING.xl,\r\n    borderRadius: 12,\r\n    shadowColor: COLORS.black,\r\n    shadowOffset: {\r\n      width: 0,\r\n      height: 2,\r\n    },\r\n    shadowOpacity: 0.25,\r\n    shadowRadius: 3.84,\r\n    elevation: 5,\r\n  },\r\n  loginButton: {\r\n    marginTop: SPACING.md,\r\n  },\r\n  demoCredentials: {\r\n    marginTop: SPACING.xl,\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  demoButton: {\r\n    flex: 1,\r\n    marginHorizontal: SPACING.xs,\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n","import React from 'react';\r\nimport { View, Text, Image, StyleSheet, TouchableOpacity } from 'react-native';\r\nimport { COLORS, FONTS, SPACING, SHADOWS } from '../../styles/theme';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nconst Card = ({\r\n  title,\r\n  subtitle,\r\n  description,\r\n  image,\r\n  status,\r\n  statusColor,\r\n  rightIcon,\r\n  onPress,\r\n  style,\r\n  imageStyle,\r\n  badges = [],\r\n}) => {\r\n  const getStatusColor = () => {\r\n    if (statusColor) return statusColor;\r\n    switch (status?.toUpperCase()) {\r\n      case 'AVAILABLE':\r\n        return COLORS.success;\r\n      case 'IN_USE':\r\n        return COLORS.primary;\r\n      case 'UNDER_MAINTENANCE':\r\n        return COLORS.warning;\r\n      case 'OUT_OF_ORDER':\r\n        return COLORS.danger;\r\n      default:\r\n        return COLORS.gray[500];\r\n    }\r\n  };\r\n\r\n  const renderBadges = () => {\r\n    return badges.map((badge, index) => (\r\n      <View\r\n        key={index}\r\n        style={[\r\n          styles.badge,\r\n          { backgroundColor: badge.color || COLORS.primary },\r\n        ]}\r\n      >\r\n        <Text style={styles.badgeText}>{badge.text}</Text>\r\n      </View>\r\n    ));\r\n  };\r\n\r\n  const CardContent = () => (\r\n    <View style={[styles.container, style]}>\r\n      {image && (\r\n        <Image\r\n          source={{ uri: image }}\r\n          style={[styles.image, imageStyle]}\r\n          resizeMode=\"cover\"\r\n        />\r\n      )}\r\n      <View style={styles.content}>\r\n        <View style={styles.header}>\r\n          <View style={styles.titleContainer}>\r\n            <Text style={styles.title} numberOfLines={1}>\r\n              {title}\r\n            </Text>\r\n            {status && (\r\n              <View\r\n                style={[styles.status, { backgroundColor: getStatusColor() }]}\r\n              >\r\n                <Text style={styles.statusText}>{status}</Text>\r\n              </View>\r\n            )}\r\n          </View>\r\n          {rightIcon && (\r\n            <Ionicons\r\n              name={rightIcon}\r\n              size={24}\r\n              color={COLORS.gray[500]}\r\n              style={styles.rightIcon}\r\n            />\r\n          )}\r\n        </View>\r\n        {subtitle && <Text style={styles.subtitle}>{subtitle}</Text>}\r\n        {description && (\r\n          <Text style={styles.description} numberOfLines={2}>\r\n            {description}\r\n          </Text>\r\n        )}\r\n        {badges.length > 0 && <View style={styles.badgeContainer}>{renderBadges()}</View>}\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  if (onPress) {\r\n    return (\r\n      <TouchableOpacity onPress={onPress} activeOpacity={0.7}>\r\n        <CardContent />\r\n      </TouchableOpacity>\r\n    );\r\n  }\r\n\r\n  return <CardContent />;\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: COLORS.white,\r\n    borderRadius: 12,\r\n    overflow: 'hidden',\r\n    ...SHADOWS.md,\r\n  },\r\n  image: {\r\n    width: '100%',\r\n    height: 150,\r\n  },\r\n  content: {\r\n    padding: SPACING.md,\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'flex-start',\r\n  },\r\n  titleContainer: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    flexWrap: 'wrap',\r\n  },\r\n  title: {\r\n    ...FONTS.bold,\r\n    fontSize: FONTS.sizes.lg,\r\n    color: COLORS.gray[900],\r\n    marginRight: SPACING.sm,\r\n    flex: 1,\r\n  },\r\n  subtitle: {\r\n    ...FONTS.regular,\r\n    fontSize: FONTS.sizes.md,\r\n    color: COLORS.gray[600],\r\n    marginTop: SPACING.xs,\r\n  },\r\n  description: {\r\n    ...FONTS.regular,\r\n    fontSize: FONTS.sizes.sm,\r\n    color: COLORS.gray[500],\r\n    marginTop: SPACING.xs,\r\n  },\r\n  status: {\r\n    paddingHorizontal: SPACING.sm,\r\n    paddingVertical: SPACING.xs,\r\n    borderRadius: 16,\r\n    marginLeft: SPACING.xs,\r\n  },\r\n  statusText: {\r\n    ...FONTS.medium,\r\n    fontSize: FONTS.sizes.xs,\r\n    color: COLORS.white,\r\n    textTransform: 'uppercase',\r\n  },\r\n  rightIcon: {\r\n    marginLeft: SPACING.sm,\r\n  },\r\n  badgeContainer: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    marginTop: SPACING.sm,\r\n  },\r\n  badge: {\r\n    paddingHorizontal: SPACING.sm,\r\n    paddingVertical: SPACING.xs,\r\n    borderRadius: 16,\r\n    marginRight: SPACING.xs,\r\n    marginBottom: SPACING.xs,\r\n  },\r\n  badgeText: {\r\n    ...FONTS.medium,\r\n    fontSize: FONTS.sizes.xs,\r\n    color: COLORS.white,\r\n  },\r\n});\r\n\r\nexport default Card;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  FlatList,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { COLORS, SPACING, FONTS } from '../../styles/theme';\r\nimport Card from '../../components/common/Card';\r\nimport { equipment } from '../../data/mockData';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { USER_ROLES } from '../../data/mockData';\r\n\r\nconst EquipmentListScreen = ({ navigation }) => {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const { user } = useAuth();\r\n\r\n  const filteredEquipment = equipment.filter(item =>\r\n    item.name.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n    item.department.toLowerCase().includes(searchQuery.toLowerCase())\r\n  );\r\n\r\n  const renderItem = ({ item }) => (\r\n    <Card\r\n      title={item.name}\r\n      subtitle={`${item.modelNumber} • ${item.department}`}\r\n      description={`Serial: ${item.serialNumber}`}\r\n      image={item.image}\r\n      status={item.status}\r\n      badges={[\r\n        {\r\n          text: `Next Maintenance: ${new Date(item.nextMaintenance).toLocaleDateString()}`,\r\n          color: COLORS.gray[500],\r\n        },\r\n      ]}\r\n      onPress={() => navigation.navigate('EquipmentDetails', { id: item.id })}\r\n      style={styles.card}\r\n    />\r\n  );\r\n\r\n  const renderHeader = () => (\r\n    <View style={styles.header}>\r\n      <View style={styles.searchContainer}>\r\n        <Ionicons name=\"search-outline\" size={20} color={COLORS.gray[400]} style={styles.searchIcon} />\r\n        <TextInput\r\n          style={styles.searchInput}\r\n          placeholder=\"Search equipment...\"\r\n          value={searchQuery}\r\n          onChangeText={setSearchQuery}\r\n          placeholderTextColor={COLORS.gray[400]}\r\n        />\r\n        {searchQuery.length > 0 && (\r\n          <TouchableOpacity onPress={() => setSearchQuery('')}>\r\n            <Ionicons name=\"close-circle\" size={20} color={COLORS.gray[400]} />\r\n          </TouchableOpacity>\r\n        )}\r\n      </View>\r\n      {user?.role === USER_ROLES.ADMIN && (\r\n        <TouchableOpacity\r\n          style={styles.addButton}\r\n          onPress={() => navigation.navigate('AddEquipment')}\r\n        >\r\n          <Ionicons name=\"add\" size={24} color={COLORS.white} />\r\n        </TouchableOpacity>\r\n      )}\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {renderHeader()}\r\n      <FlatList\r\n        data={filteredEquipment}\r\n        renderItem={renderItem}\r\n        keyExtractor={item => item.id}\r\n        contentContainerStyle={styles.list}\r\n        showsVerticalScrollIndicator={false}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: COLORS.background,\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    padding: SPACING.md,\r\n    backgroundColor: COLORS.white,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLORS.gray[200],\r\n  },\r\n  searchContainer: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    backgroundColor: COLORS.gray[100],\r\n    borderRadius: 8,\r\n    paddingHorizontal: SPACING.sm,\r\n    marginRight: SPACING.sm,\r\n  },\r\n  searchIcon: {\r\n    marginRight: SPACING.sm,\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    height: 40,\r\n    ...FONTS.regular,\r\n    fontSize: FONTS.sizes.md,\r\n    color: COLORS.gray[900],\r\n  },\r\n  addButton: {\r\n    width: 40,\r\n    height: 40,\r\n    borderRadius: 20,\r\n    backgroundColor: COLORS.primary,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  list: {\r\n    padding: SPACING.md,\r\n  },\r\n  card: {\r\n    marginBottom: SPACING.md,\r\n  },\r\n});\r\n\r\nexport default EquipmentListScreen;\r\n","import React from 'react';\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  Image,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Text,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { COLORS, SPACING, FONTS, SHADOWS } from '../../styles/theme';\r\nimport Button from '../../components/common/Button';\r\nimport { equipment, USER_ROLES } from '../../data/mockData';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nconst EquipmentDetailsScreen = ({ route, navigation }) => {\r\n  const { id } = route.params;\r\n  const { user } = useAuth();\r\n  const item = equipment.find(e => e.id === id);\r\n\r\n  if (!item) {\r\n    return (\r\n      <View style={styles.errorContainer}>\r\n        <Text style={styles.errorText}>Equipment not found</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  const InfoRow = ({ label, value, icon }) => (\r\n    <View style={styles.infoRow}>\r\n      <View style={styles.infoLabel}>\r\n        <Ionicons name={icon} size={20} color={COLORS.gray[500]} style={styles.infoIcon} />\r\n        <Text style={styles.infoLabelText}>{label}</Text>\r\n      </View>\r\n      <Text style={styles.infoValue}>{value}</Text>\r\n    </View>\r\n  );\r\n\r\n  const StatusBadge = ({ status }) => (\r\n    <View style={[styles.statusBadge, getStatusStyle(status)]}>\r\n      <Text style={styles.statusText}>{status.replace('_', ' ')}</Text>\r\n    </View>\r\n  );\r\n\r\n  const getStatusStyle = (status) => {\r\n    switch (status) {\r\n      case 'AVAILABLE':\r\n        return { backgroundColor: COLORS.success };\r\n      case 'IN_USE':\r\n        return { backgroundColor: COLORS.primary };\r\n      case 'UNDER_MAINTENANCE':\r\n        return { backgroundColor: COLORS.warning };\r\n      case 'OUT_OF_ORDER':\r\n        return { backgroundColor: COLORS.danger };\r\n      default:\r\n        return { backgroundColor: COLORS.gray[500] };\r\n    }\r\n  };\r\n\r\n  React.useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerRight: () => (\r\n        user?.role === USER_ROLES.ADMIN && (\r\n          <TouchableOpacity\r\n            style={styles.headerButton}\r\n            onPress={() => navigation.navigate('EditEquipment', { id: item.id })}\r\n          >\r\n            <Ionicons name=\"create-outline\" size={24} color={COLORS.white} />\r\n          </TouchableOpacity>\r\n        )\r\n      ),\r\n    });\r\n  }, [navigation, user]);\r\n\r\n  return (\r\n    <ScrollView style={styles.container} showsVerticalScrollIndicator={false}>\r\n      <Image source={{ uri: item.image }} style={styles.image} />\r\n      \r\n      <View style={styles.content}>\r\n        <View style={styles.header}>\r\n          <Text style={styles.title}>{item.name}</Text>\r\n          <StatusBadge status={item.status} />\r\n        </View>\r\n\r\n        <View style={styles.infoSection}>\r\n          <InfoRow\r\n            label=\"Model Number\"\r\n            value={item.modelNumber}\r\n            icon=\"barcode-outline\"\r\n          />\r\n          <InfoRow\r\n            label=\"Serial Number\"\r\n            value={item.serialNumber}\r\n            icon=\"key-outline\"\r\n          />\r\n          <InfoRow\r\n            label=\"Department\"\r\n            value={item.department}\r\n            icon=\"business-outline\"\r\n          />\r\n          <InfoRow\r\n            label=\"Date Acquired\"\r\n            value={new Date(item.dateAcquired).toLocaleDateString()}\r\n            icon=\"calendar-outline\"\r\n          />\r\n          <InfoRow\r\n            label=\"Last Maintenance\"\r\n            value={new Date(item.lastMaintenance).toLocaleDateString()}\r\n            icon=\"construct-outline\"\r\n          />\r\n          <InfoRow\r\n            label=\"Next Maintenance\"\r\n            value={new Date(item.nextMaintenance).toLocaleDateString()}\r\n            icon=\"alarm-outline\"\r\n          />\r\n        </View>\r\n\r\n        <View style={styles.actions}>\r\n          <Button\r\n            title=\"Report Issue\"\r\n            onPress={() => navigation.navigate('CreateReport', { equipmentId: item.id })}\r\n            style={styles.reportButton}\r\n          />\r\n          <Button\r\n            title=\"View QR Code\"\r\n            variant=\"outline\"\r\n            onPress={() => {/* Show QR code modal */}}\r\n            style={styles.qrButton}\r\n          />\r\n        </View>\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: COLORS.background,\r\n  },\r\n  errorContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  errorText: {\r\n    ...FONTS.medium,\r\n    fontSize: FONTS.sizes.lg,\r\n    color: COLORS.gray[600],\r\n  },\r\n  image: {\r\n    width: '100%',\r\n    height: 250,\r\n    resizeMode: 'cover',\r\n  },\r\n  content: {\r\n    padding: SPACING.lg,\r\n  },\r\n  header: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: SPACING.lg,\r\n  },\r\n  title: {\r\n    ...FONTS.bold,\r\n    fontSize: FONTS.sizes['2xl'],\r\n    color: COLORS.gray[900],\r\n    flex: 1,\r\n    marginRight: SPACING.sm,\r\n  },\r\n  statusBadge: {\r\n    paddingHorizontal: SPACING.md,\r\n    paddingVertical: SPACING.xs,\r\n    borderRadius: 16,\r\n  },\r\n  statusText: {\r\n    ...FONTS.medium,\r\n    fontSize: FONTS.sizes.xs,\r\n    color: COLORS.white,\r\n    textTransform: 'uppercase',\r\n  },\r\n  infoSection: {\r\n    backgroundColor: COLORS.white,\r\n    borderRadius: 12,\r\n    padding: SPACING.lg,\r\n    ...SHADOWS.md,\r\n  },\r\n  infoRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    paddingVertical: SPACING.sm,\r\n  },\r\n  infoLabel: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  infoIcon: {\r\n    marginRight: SPACING.sm,\r\n  },\r\n  infoLabelText: {\r\n    ...FONTS.medium,\r\n    fontSize: FONTS.sizes.md,\r\n    color: COLORS.gray[600],\r\n  },\r\n  infoValue: {\r\n    ...FONTS.regular,\r\n    fontSize: FONTS.sizes.md,\r\n    color: COLORS.gray[900],\r\n  },\r\n  actions: {\r\n    marginTop: SPACING.xl,\r\n  },\r\n  reportButton: {\r\n    marginBottom: SPACING.sm,\r\n  },\r\n  qrButton: {\r\n    backgroundColor: COLORS.white,\r\n  },\r\n  headerButton: {\r\n    marginRight: SPACING.md,\r\n  },\r\n});\r\n\r\nexport default EquipmentDetailsScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, StyleSheet, Text, Dimensions } from 'react-native';\r\nimport { Camera } from 'expo-camera';\r\nimport { BarCodeScanner } from 'expo-barcode-scanner';\r\nimport { COLORS, FONTS, SPACING } from '../../styles/theme';\r\nimport Button from '../../components/common/Button';\r\nimport { equipment } from '../../data/mockData';\r\n\r\nconst SCREEN_WIDTH = Dimensions.get('window').width;\r\nconst SCAN_AREA_SIZE = SCREEN_WIDTH * 0.7;\r\n\r\nconst QRScannerScreen = ({ navigation }) => {\r\n  const [hasPermission, setHasPermission] = useState(null);\r\n  const [scanned, setScanned] = useState(false);\r\n\r\n  useEffect(() => {\r\n    requestCameraPermission();\r\n  }, []);\r\n\r\n  const requestCameraPermission = async () => {\r\n    try {\r\n      const { status } = await Camera.requestCameraPermissionsAsync();\r\n      setHasPermission(status === 'granted');\r\n    } catch (error) {\r\n      console.error('Error requesting camera permission:', error);\r\n      setHasPermission(false);\r\n    }\r\n  };\r\n\r\n  const handleBarCodeScanned = ({ data }) => {\r\n    setScanned(true);\r\n    \r\n    // Find equipment by QR code\r\n    const foundEquipment = equipment.find(item => item.qrCode === data);\r\n    \r\n    if (foundEquipment) {\r\n      navigation.replace('EquipmentDetails', { id: foundEquipment.id });\r\n    } else {\r\n      // QR code not recognized\r\n      alert('Invalid QR code. Please try scanning a valid equipment QR code.');\r\n      setScanned(false);\r\n    }\r\n  };\r\n\r\n  if (hasPermission === null) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.text}>Requesting camera permission...</Text>\r\n      </View>\r\n    );\r\n  }\r\n\r\n  if (hasPermission === false) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <Text style={styles.errorText}>No access to camera</Text>\r\n        <Button\r\n          title=\"Request Permission\"\r\n          onPress={requestCameraPermission}\r\n          style={styles.button}\r\n        />\r\n      </View>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Camera\r\n        style={styles.camera}\r\n        type={Camera.Constants.Type.back}\r\n        barCodeScannerSettings={{\r\n          barCodeTypes: [BarCodeScanner.Constants.BarCodeType.qr],\r\n        }}\r\n        onBarCodeScanned={scanned ? undefined : handleBarCodeScanned}\r\n      >\r\n        <View style={styles.overlay}>\r\n          <View style={styles.scanArea}>\r\n            <View style={styles.cornerTL} />\r\n            <View style={styles.cornerTR} />\r\n            <View style={styles.cornerBL} />\r\n            <View style={styles.cornerBR} />\r\n          </View>\r\n          <Text style={styles.instructions}>\r\n            Align QR code within the frame to scan\r\n          </Text>\r\n        </View>\r\n      </Camera>\r\n\r\n      {scanned && (\r\n        <Button\r\n          title=\"Tap to Scan Again\"\r\n          onPress={() => setScanned(false)}\r\n          style={styles.button}\r\n        />\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: COLORS.black,\r\n  },\r\n  camera: {\r\n    flex: 1,\r\n  },\r\n  overlay: {\r\n    flex: 1,\r\n    backgroundColor: 'rgba(0,0,0,0.5)',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  scanArea: {\r\n    width: SCAN_AREA_SIZE,\r\n    height: SCAN_AREA_SIZE,\r\n    borderWidth: 2,\r\n    borderColor: 'transparent',\r\n    position: 'relative',\r\n  },\r\n  cornerTL: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    width: 20,\r\n    height: 20,\r\n    borderTopWidth: 2,\r\n    borderLeftWidth: 2,\r\n    borderColor: COLORS.white,\r\n  },\r\n  cornerTR: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    right: 0,\r\n    width: 20,\r\n    height: 20,\r\n    borderTopWidth: 2,\r\n    borderRightWidth: 2,\r\n    borderColor: COLORS.white,\r\n  },\r\n  cornerBL: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    width: 20,\r\n    height: 20,\r\n    borderBottomWidth: 2,\r\n    borderLeftWidth: 2,\r\n    borderColor: COLORS.white,\r\n  },\r\n  cornerBR: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    right: 0,\r\n    width: 20,\r\n    height: 20,\r\n    borderBottomWidth: 2,\r\n    borderRightWidth: 2,\r\n    borderColor: COLORS.white,\r\n  },\r\n  text: {\r\n    ...FONTS.regular,\r\n    fontSize: FONTS.sizes.md,\r\n    color: COLORS.white,\r\n    textAlign: 'center',\r\n    margin: SPACING.xl,\r\n  },\r\n  errorText: {\r\n    ...FONTS.medium,\r\n    fontSize: FONTS.sizes.lg,\r\n    color: COLORS.danger,\r\n    textAlign: 'center',\r\n    margin: SPACING.xl,\r\n  },\r\n  instructions: {\r\n    ...FONTS.medium,\r\n    fontSize: FONTS.sizes.md,\r\n    color: COLORS.white,\r\n    textAlign: 'center',\r\n    marginTop: SPACING.xl,\r\n  },\r\n  button: {\r\n    position: 'absolute',\r\n    bottom: SPACING.xl,\r\n    left: SPACING.xl,\r\n    right: SPACING.xl,\r\n  },\r\n});\r\n\r\nexport default QRScannerScreen;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  FlatList,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { COLORS, SPACING, FONTS, SHADOWS } from '../../styles/theme';\r\nimport Button from '../../components/common/Button';\r\nimport { reports, equipment, users, SEVERITY_LEVELS } from '../../data/mockData';\r\n\r\nconst ReportsScreen = ({ navigation }) => {\r\n  const [filterStatus, setFilterStatus] = useState('ALL');\r\n\r\n  const getStatusColor = (status) => {\r\n    switch (status.toUpperCase()) {\r\n      case 'PENDING':\r\n        return COLORS.warning;\r\n      case 'IN_PROGRESS':\r\n        return COLORS.primary;\r\n      case 'COMPLETED':\r\n        return COLORS.success;\r\n      default:\r\n        return COLORS.gray[500];\r\n    }\r\n  };\r\n\r\n  const getSeverityColor = (severity) => {\r\n    switch (severity.toUpperCase()) {\r\n      case SEVERITY_LEVELS.HIGH:\r\n        return COLORS.danger;\r\n      case SEVERITY_LEVELS.MEDIUM:\r\n        return COLORS.warning;\r\n      case SEVERITY_LEVELS.LOW:\r\n        return COLORS.success;\r\n      default:\r\n        return COLORS.gray[500];\r\n    }\r\n  };\r\n\r\n  const getEquipmentName = (equipmentId) => {\r\n    const item = equipment.find(e => e.id === equipmentId);\r\n    return item ? item.name : 'Unknown Equipment';\r\n  };\r\n\r\n  const getReporterName = (reporterId) => {\r\n    const user = users.find(u => u.id === reporterId);\r\n    return user ? user.name : 'Unknown User';\r\n  };\r\n\r\n  const filteredReports = reports.filter(report => \r\n    filterStatus === 'ALL' || report.status === filterStatus\r\n  );\r\n\r\n  const renderReport = ({ item }) => (\r\n    <TouchableOpacity\r\n      style={styles.reportCard}\r\n      onPress={() => navigation.navigate('ReportDetails', { id: item.id })}\r\n    >\r\n      <View style={styles.reportHeader}>\r\n        <View style={styles.equipmentInfo}>\r\n          <Text style={styles.equipmentName}>\r\n            {getEquipmentName(item.equipmentId)}\r\n          </Text>\r\n          <View style={[styles.statusBadge, { backgroundColor: getStatusColor(item.status) }]}>\r\n            <Text style={styles.statusText}>{item.status}</Text>\r\n          </View>\r\n        </View>\r\n        <View style={[styles.severityBadge, { backgroundColor: getSeverityColor(item.severity) }]}>\r\n          <Text style={styles.severityText}>{item.severity}</Text>\r\n        </View>\r\n      </View>\r\n\r\n      <Text style={styles.description} numberOfLines={2}>\r\n        {item.description}\r\n      </Text>\r\n\r\n      <View style={styles.reportFooter}>\r\n        <View style={styles.reporterInfo}>\r\n          <Ionicons name=\"person-outline\" size={16} color={COLORS.gray[500]} />\r\n          <Text style={styles.reporterName}>{getReporterName(item.reporterId)}</Text>\r\n        </View>\r\n        <Text style={styles.date}>\r\n          {new Date(item.dateReported).toLocaleDateString()}\r\n        </Text>\r\n      </View>\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  const renderHeader = () => (\r\n    <View style={styles.header}>\r\n      <View style={styles.filterButtons}>\r\n        {['ALL', 'PENDING', 'IN_PROGRESS', 'COMPLETED'].map((status) => (\r\n          <TouchableOpacity\r\n            key={status}\r\n            style={[\r\n              styles.filterButton,\r\n              filterStatus === status && styles.filterButtonActive,\r\n            ]}\r\n            onPress={() => setFilterStatus(status)}\r\n          >\r\n            <Text\r\n              style={[\r\n                styles.filterButtonText,\r\n                filterStatus === status && styles.filterButtonTextActive,\r\n              ]}\r\n            >\r\n              {status.replace('_', ' ')}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  const renderEmpty = () => (\r\n    <View style={styles.emptyContainer}>\r\n      <Ionicons name=\"document-text-outline\" size={64} color={COLORS.gray[300]} />\r\n      <Text style={styles.emptyText}>No reports found</Text>\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {renderHeader()}\r\n      <FlatList\r\n        data={filteredReports}\r\n        renderItem={renderReport}\r\n        keyExtractor={item => item.id}\r\n        contentContainerStyle={styles.list}\r\n        ListEmptyComponent={renderEmpty}\r\n      />\r\n      <Button\r\n        title=\"Create New Report\"\r\n        onPress={() => navigation.navigate('CreateReport')}\r\n        style={styles.createButton}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: COLORS.background,\r\n  },\r\n  header: {\r\n    padding: SPACING.md,\r\n    backgroundColor: COLORS.white,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLORS.gray[200],\r\n  },\r\n  filterButtons: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n  },\r\n  filterButton: {\r\n    paddingVertical: SPACING.xs,\r\n    paddingHorizontal: SPACING.sm,\r\n    borderRadius: 16,\r\n    backgroundColor: COLORS.gray[100],\r\n  },\r\n  filterButtonActive: {\r\n    backgroundColor: COLORS.primary,\r\n  },\r\n  filterButtonText: {\r\n    ...FONTS.medium,\r\n    fontSize: FONTS.sizes.sm,\r\n    color: COLORS.gray[600],\r\n  },\r\n  filterButtonTextActive: {\r\n    color: COLORS.white,\r\n  },\r\n  list: {\r\n    padding: SPACING.md,\r\n  },\r\n  reportCard: {\r\n    backgroundColor: COLORS.white,\r\n    borderRadius: 12,\r\n    padding: SPACING.md,\r\n    marginBottom: SPACING.md,\r\n    ...SHADOWS.md,\r\n  },\r\n  reportHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'flex-start',\r\n    marginBottom: SPACING.sm,\r\n  },\r\n  equipmentInfo: {\r\n    flex: 1,\r\n    marginRight: SPACING.sm,\r\n  },\r\n  equipmentName: {\r\n    ...FONTS.bold,\r\n    fontSize: FONTS.sizes.md,\r\n    color: COLORS.gray[900],\r\n    marginBottom: SPACING.xs,\r\n  },\r\n  statusBadge: {\r\n    alignSelf: 'flex-start',\r\n    paddingVertical: SPACING.xs,\r\n    paddingHorizontal: SPACING.sm,\r\n    borderRadius: 12,\r\n    marginTop: SPACING.xs,\r\n  },\r\n  statusText: {\r\n    ...FONTS.medium,\r\n    fontSize: FONTS.sizes.xs,\r\n    color: COLORS.white,\r\n  },\r\n  severityBadge: {\r\n    paddingVertical: SPACING.xs,\r\n    paddingHorizontal: SPACING.sm,\r\n    borderRadius: 12,\r\n  },\r\n  severityText: {\r\n    ...FONTS.medium,\r\n    fontSize: FONTS.sizes.xs,\r\n    color: COLORS.white,\r\n  },\r\n  description: {\r\n    ...FONTS.regular,\r\n    fontSize: FONTS.sizes.md,\r\n    color: COLORS.gray[600],\r\n    marginBottom: SPACING.md,\r\n  },\r\n  reportFooter: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  reporterInfo: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  reporterName: {\r\n    ...FONTS.medium,\r\n    fontSize: FONTS.sizes.sm,\r\n    color: COLORS.gray[600],\r\n    marginLeft: SPACING.xs,\r\n  },\r\n  date: {\r\n    ...FONTS.regular,\r\n    fontSize: FONTS.sizes.sm,\r\n    color: COLORS.gray[500],\r\n  },\r\n  emptyContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingVertical: SPACING.xl,\r\n  },\r\n  emptyText: {\r\n    ...FONTS.medium,\r\n    fontSize: FONTS.sizes.lg,\r\n    color: COLORS.gray[400],\r\n    marginTop: SPACING.md,\r\n  },\r\n  createButton: {\r\n    margin: SPACING.md,\r\n  },\r\n});\r\n\r\nexport default ReportsScreen;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Image,\r\n  TouchableOpacity,\r\n  Alert,\r\n} from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { COLORS, SPACING, FONTS } from '../../styles/theme';\r\nimport Input from '../../components/common/Input';\r\nimport Button from '../../components/common/Button';\r\nimport { equipment, SEVERITY_LEVELS } from '../../data/mockData';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\n\r\nconst CreateReportScreen = ({ route, navigation }) => {\r\n  const { equipmentId } = route.params || {};\r\n  const { user } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n  const [formData, setFormData] = useState({\r\n    description: '',\r\n    severity: '',\r\n    image: null,\r\n  });\r\n\r\n  const selectedEquipment = equipment.find(e => e.id === equipmentId);\r\n\r\n  const handleImagePick = async () => {\r\n    try {\r\n      const permissionResult = await ImagePicker.requestMediaLibraryPermissionsAsync();\r\n      \r\n      if (!permissionResult.granted) {\r\n        Alert.alert(\r\n          'Permission Required',\r\n          'Please allow access to your photo library to attach images.'\r\n        );\r\n        return;\r\n      }\r\n\r\n      const result = await ImagePicker.launchImageLibraryAsync({\r\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n        allowsEditing: true,\r\n        aspect: [4, 3],\r\n        quality: 0.8,\r\n      });\r\n\r\n      if (!result.canceled) {\r\n        setFormData(prev => ({\r\n          ...prev,\r\n          image: result.assets[0].uri,\r\n        }));\r\n      }\r\n    } catch (error) {\r\n      console.error('Error picking image:', error);\r\n      Alert.alert('Error', 'Failed to pick image. Please try again.');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!formData.description.trim()) {\r\n      Alert.alert('Error', 'Please provide a description of the issue');\r\n      return;\r\n    }\r\n\r\n    if (!formData.severity) {\r\n      Alert.alert('Error', 'Please select the severity level');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      // Simulate API call delay\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n\r\n      // In a real app, you would upload the image and send the report data to your backend\r\n      \r\n      navigation.goBack();\r\n      // Optionally show success message\r\n      Alert.alert('Success', 'Report submitted successfully');\r\n    } catch (error) {\r\n      Alert.alert('Error', 'Failed to submit report. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.container} contentContainerStyle={styles.content}>\r\n      {selectedEquipment && (\r\n        <View style={styles.equipmentInfo}>\r\n          <Image\r\n            source={{ uri: selectedEquipment.image }}\r\n            style={styles.equipmentImage}\r\n          />\r\n          <View style={styles.equipmentDetails}>\r\n            <Input\r\n              label=\"Equipment\"\r\n              value={selectedEquipment.name}\r\n              disabled\r\n            />\r\n            <Input\r\n              label=\"Department\"\r\n              value={selectedEquipment.department}\r\n              disabled\r\n            />\r\n          </View>\r\n        </View>\r\n      )}\r\n\r\n      <Input\r\n        label=\"Description\"\r\n        placeholder=\"Describe the issue in detail...\"\r\n        value={formData.description}\r\n        onChangeText={(text) => setFormData(prev => ({ ...prev, description: text }))}\r\n        multiline\r\n        numberOfLines={4}\r\n      />\r\n\r\n      <View style={styles.severityContainer}>\r\n        <View style={styles.severityHeader}>\r\n          <Ionicons name=\"warning-outline\" size={20} color={COLORS.gray[600]} />\r\n          <Input\r\n            label=\"Severity Level\"\r\n            value={formData.severity}\r\n            containerStyle={styles.severityInput}\r\n            disabled\r\n          />\r\n        </View>\r\n        <View style={styles.severityButtons}>\r\n          {Object.values(SEVERITY_LEVELS).map((level) => (\r\n            <Button\r\n              key={level}\r\n              title={level}\r\n              variant={formData.severity === level ? 'primary' : 'outline'}\r\n              size=\"sm\"\r\n              onPress={() => setFormData(prev => ({ ...prev, severity: level }))}\r\n              style={styles.severityButton}\r\n            />\r\n          ))}\r\n        </View>\r\n      </View>\r\n\r\n      <TouchableOpacity\r\n        style={styles.imagePickerButton}\r\n        onPress={handleImagePick}\r\n      >\r\n        {formData.image ? (\r\n          <Image source={{ uri: formData.image }} style={styles.pickedImage} />\r\n        ) : (\r\n          <View style={styles.imagePickerContent}>\r\n            <Ionicons name=\"camera-outline\" size={32} color={COLORS.gray[400]} />\r\n            <Button\r\n              title=\"Add Photo\"\r\n              variant=\"outline\"\r\n              size=\"sm\"\r\n              style={styles.addPhotoButton}\r\n            />\r\n          </View>\r\n        )}\r\n      </TouchableOpacity>\r\n\r\n      <Button\r\n        title=\"Submit Report\"\r\n        onPress={handleSubmit}\r\n        loading={loading}\r\n        style={styles.submitButton}\r\n      />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: COLORS.background,\r\n  },\r\n  content: {\r\n    padding: SPACING.lg,\r\n  },\r\n  equipmentInfo: {\r\n    backgroundColor: COLORS.white,\r\n    borderRadius: 12,\r\n    padding: SPACING.md,\r\n    marginBottom: SPACING.lg,\r\n  },\r\n  equipmentImage: {\r\n    width: '100%',\r\n    height: 150,\r\n    borderRadius: 8,\r\n    marginBottom: SPACING.md,\r\n  },\r\n  equipmentDetails: {\r\n    gap: SPACING.sm,\r\n  },\r\n  severityContainer: {\r\n    marginBottom: SPACING.lg,\r\n  },\r\n  severityHeader: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    gap: SPACING.sm,\r\n  },\r\n  severityInput: {\r\n    flex: 1,\r\n  },\r\n  severityButtons: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginTop: SPACING.sm,\r\n  },\r\n  severityButton: {\r\n    flex: 1,\r\n    marginHorizontal: SPACING.xs,\r\n  },\r\n  imagePickerButton: {\r\n    backgroundColor: COLORS.white,\r\n    borderRadius: 12,\r\n    borderWidth: 2,\r\n    borderColor: COLORS.gray[200],\r\n    borderStyle: 'dashed',\r\n    overflow: 'hidden',\r\n    marginBottom: SPACING.lg,\r\n  },\r\n  imagePickerContent: {\r\n    height: 200,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  pickedImage: {\r\n    width: '100%',\r\n    height: 200,\r\n    resizeMode: 'cover',\r\n  },\r\n  addPhotoButton: {\r\n    marginTop: SPACING.sm,\r\n  },\r\n  submitButton: {\r\n    marginTop: SPACING.md,\r\n  },\r\n});\r\n\r\nexport default CreateReportScreen;\r\n","import React from 'react';\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { COLORS, SPACING, FONTS, SHADOWS } from '../../styles/theme';\r\nimport { dashboardData, equipment, reports } from '../../data/mockData';\r\nimport Card from '../../components/common/Card';\r\n\r\nconst StatCard = ({ title, value, icon, color, onPress }) => (\r\n  <TouchableOpacity\r\n    style={[styles.statCard, onPress && styles.pressable]}\r\n    onPress={onPress}\r\n    disabled={!onPress}\r\n  >\r\n    <View style={[styles.iconContainer, { backgroundColor: color }]}>\r\n      <Ionicons name={icon} size={24} color={COLORS.white} />\r\n    </View>\r\n    <Text style={styles.statValue}>{value}</Text>\r\n    <Text style={styles.statTitle}>{title}</Text>\r\n  </TouchableOpacity>\r\n);\r\n\r\nconst AdminDashboardScreen = ({ navigation }) => {\r\n  const recentReports = reports\r\n    .sort((a, b) => new Date(b.dateReported) - new Date(a.dateReported))\r\n    .slice(0, 3);\r\n\r\n  const getEquipmentName = (equipmentId) => {\r\n    const item = equipment.find(e => e.id === equipmentId);\r\n    return item ? item.name : 'Unknown Equipment';\r\n  };\r\n\r\n  const renderRecentReports = () => (\r\n    <View style={styles.section}>\r\n      <View style={styles.sectionHeader}>\r\n        <Text style={styles.sectionTitle}>Recent Reports</Text>\r\n        <TouchableOpacity\r\n          onPress={() => navigation.navigate('Reports')}\r\n          style={styles.seeAllButton}\r\n        >\r\n          <Text style={styles.seeAllText}>See All</Text>\r\n          <Ionicons name=\"chevron-forward\" size={16} color={COLORS.primary} />\r\n        </TouchableOpacity>\r\n      </View>\r\n      {recentReports.map((report) => (\r\n        <Card\r\n          key={report.id}\r\n          title={getEquipmentName(report.equipmentId)}\r\n          subtitle={`Severity: ${report.severity}`}\r\n          description={report.description}\r\n          status={report.status}\r\n          onPress={() => navigation.navigate('ReportDetails', { id: report.id })}\r\n          style={styles.reportCard}\r\n        />\r\n      ))}\r\n    </View>\r\n  );\r\n\r\n  const renderDepartmentStats = () => (\r\n    <View style={styles.section}>\r\n      <Text style={styles.sectionTitle}>Department Usage</Text>\r\n      <View style={styles.departmentStats}>\r\n        {Object.entries(dashboardData.departmentUsage).map(([dept, usage]) => (\r\n          <View key={dept} style={styles.departmentRow}>\r\n            <Text style={styles.departmentName}>{dept}</Text>\r\n            <View style={styles.usageBarContainer}>\r\n              <View\r\n                style={[styles.usageBar, { width: `${usage}%` }]}\r\n              />\r\n            </View>\r\n            <Text style={styles.usageText}>{usage}%</Text>\r\n          </View>\r\n        ))}\r\n      </View>\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.statsGrid}>\r\n        <StatCard\r\n          title=\"Total Equipment\"\r\n          value={dashboardData.totalEquipment}\r\n          icon=\"medical\"\r\n          color={COLORS.primary}\r\n          onPress={() => navigation.navigate('EquipmentList')}\r\n        />\r\n        <StatCard\r\n          title=\"Under Maintenance\"\r\n          value={dashboardData.underMaintenance}\r\n          icon=\"construct\"\r\n          color={COLORS.warning}\r\n        />\r\n        <StatCard\r\n          title=\"Overdue Repairs\"\r\n          value={dashboardData.overdueRepairs}\r\n          icon=\"alert-circle\"\r\n          color={COLORS.danger}\r\n        />\r\n      </View>\r\n\r\n      {renderDepartmentStats()}\r\n      {renderRecentReports()}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: COLORS.background,\r\n  },\r\n  statsGrid: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    padding: SPACING.md,\r\n    gap: SPACING.md,\r\n  },\r\n  statCard: {\r\n    flex: 1,\r\n    minWidth: '30%',\r\n    backgroundColor: COLORS.white,\r\n    borderRadius: 12,\r\n    padding: SPACING.md,\r\n    ...SHADOWS.md,\r\n  },\r\n  pressable: {\r\n    opacity: 1,\r\n  },\r\n  iconContainer: {\r\n    width: 40,\r\n    height: 40,\r\n    borderRadius: 20,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginBottom: SPACING.sm,\r\n  },\r\n  statValue: {\r\n    ...FONTS.bold,\r\n    fontSize: FONTS.sizes['2xl'],\r\n    color: COLORS.gray[900],\r\n    marginBottom: SPACING.xs,\r\n  },\r\n  statTitle: {\r\n    ...FONTS.medium,\r\n    fontSize: FONTS.sizes.sm,\r\n    color: COLORS.gray[600],\r\n  },\r\n  section: {\r\n    padding: SPACING.md,\r\n  },\r\n  sectionHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: SPACING.md,\r\n  },\r\n  sectionTitle: {\r\n    ...FONTS.bold,\r\n    fontSize: FONTS.sizes.lg,\r\n    color: COLORS.gray[900],\r\n  },\r\n  seeAllButton: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n  },\r\n  seeAllText: {\r\n    ...FONTS.medium,\r\n    fontSize: FONTS.sizes.sm,\r\n    color: COLORS.primary,\r\n    marginRight: SPACING.xs,\r\n  },\r\n  reportCard: {\r\n    marginBottom: SPACING.md,\r\n  },\r\n  departmentStats: {\r\n    backgroundColor: COLORS.white,\r\n    borderRadius: 12,\r\n    padding: SPACING.md,\r\n    ...SHADOWS.md,\r\n  },\r\n  departmentRow: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginBottom: SPACING.md,\r\n  },\r\n  departmentName: {\r\n    ...FONTS.medium,\r\n    fontSize: FONTS.sizes.sm,\r\n    color: COLORS.gray[700],\r\n    width: 100,\r\n  },\r\n  usageBarContainer: {\r\n    flex: 1,\r\n    height: 8,\r\n    backgroundColor: COLORS.gray[200],\r\n    borderRadius: 4,\r\n    marginHorizontal: SPACING.md,\r\n  },\r\n  usageBar: {\r\n    height: '100%',\r\n    backgroundColor: COLORS.primary,\r\n    borderRadius: 4,\r\n  },\r\n  usageText: {\r\n    ...FONTS.medium,\r\n    fontSize: FONTS.sizes.sm,\r\n    color: COLORS.gray[600],\r\n    width: 40,\r\n    textAlign: 'right',\r\n  },\r\n});\r\n\r\nexport default AdminDashboardScreen;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { COLORS, SPACING, FONTS, SHADOWS } from '../../styles/theme';\r\nimport Card from '../../components/common/Card';\r\nimport { reports, equipment, useAuth } from '../../data/mockData';\r\n\r\nconst TechnicianDashboardScreen = ({ navigation }) => {\r\n  const [activeTab, setActiveTab] = useState('pending');\r\n  const { user } = useAuth();\r\n\r\n  // Filter reports assigned to the current technician\r\n  const technicianReports = reports.filter(report => {\r\n    const equipmentItem = equipment.find(e => e.id === report.equipmentId);\r\n    return equipmentItem?.assignedTechnician === user.id;\r\n  });\r\n\r\n  const filteredReports = technicianReports.filter(report => {\r\n    switch (activeTab) {\r\n      case 'pending':\r\n        return report.status === 'PENDING';\r\n      case 'inProgress':\r\n        return report.status === 'IN_PROGRESS';\r\n      case 'completed':\r\n        return report.status === 'COMPLETED';\r\n      default:\r\n        return true;\r\n    }\r\n  });\r\n\r\n  const getEquipmentDetails = (equipmentId) => {\r\n    return equipment.find(e => e.id === equipmentId) || {};\r\n  };\r\n\r\n  const renderTabs = () => (\r\n    <View style={styles.tabContainer}>\r\n      <TouchableOpacity\r\n        style={[styles.tab, activeTab === 'pending' && styles.activeTab]}\r\n        onPress={() => setActiveTab('pending')}\r\n      >\r\n        <Text\r\n          style={[\r\n            styles.tabText,\r\n            activeTab === 'pending' && styles.activeTabText,\r\n          ]}\r\n        >\r\n          Pending\r\n        </Text>\r\n        <View style={styles.badge}>\r\n          <Text style={styles.badgeText}>\r\n            {technicianReports.filter(r => r.status === 'PENDING').length}\r\n          </Text>\r\n        </View>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity\r\n        style={[styles.tab, activeTab === 'inProgress' && styles.activeTab]}\r\n        onPress={() => setActiveTab('inProgress')}\r\n      >\r\n        <Text\r\n          style={[\r\n            styles.tabText,\r\n            activeTab === 'inProgress' && styles.activeTabText,\r\n          ]}\r\n        >\r\n          In Progress\r\n        </Text>\r\n      </TouchableOpacity>\r\n\r\n      <TouchableOpacity\r\n        style={[styles.tab, activeTab === 'completed' && styles.activeTab]}\r\n        onPress={() => setActiveTab('completed')}\r\n      >\r\n        <Text\r\n          style={[\r\n            styles.tabText,\r\n            activeTab === 'completed' && styles.activeTabText,\r\n          ]}\r\n        >\r\n          Completed\r\n        </Text>\r\n      </TouchableOpacity>\r\n    </View>\r\n  );\r\n\r\n  const renderTaskCard = (report) => {\r\n    const equipment = getEquipmentDetails(report.equipmentId);\r\n    \r\n    return (\r\n      <Card\r\n        key={report.id}\r\n        title={equipment.name}\r\n        subtitle={`Department: ${equipment.department}`}\r\n        description={report.description}\r\n        status={report.status}\r\n        badges={[\r\n          {\r\n            text: `Severity: ${report.severity}`,\r\n            color: getSeverityColor(report.severity),\r\n          },\r\n          {\r\n            text: `Reported: ${new Date(report.dateReported).toLocaleDateString()}`,\r\n            color: COLORS.gray[500],\r\n          },\r\n        ]}\r\n        onPress={() => navigation.navigate('ReportDetails', { id: report.id })}\r\n        style={styles.card}\r\n      />\r\n    );\r\n  };\r\n\r\n  const getSeverityColor = (severity) => {\r\n    switch (severity.toUpperCase()) {\r\n      case 'HIGH':\r\n        return COLORS.danger;\r\n      case 'MEDIUM':\r\n        return COLORS.warning;\r\n      case 'LOW':\r\n        return COLORS.success;\r\n      default:\r\n        return COLORS.gray[500];\r\n    }\r\n  };\r\n\r\n  const renderEmptyState = () => (\r\n    <View style={styles.emptyContainer}>\r\n      <Ionicons\r\n        name=\"checkmark-done-circle-outline\"\r\n        size={64}\r\n        color={COLORS.gray[300]}\r\n      />\r\n      <Text style={styles.emptyText}>No tasks found</Text>\r\n      <Text style={styles.emptySubtext}>\r\n        {activeTab === 'pending'\r\n          ? 'You have no pending maintenance tasks'\r\n          : activeTab === 'inProgress'\r\n          ? 'No tasks are currently in progress'\r\n          : 'No completed tasks yet'}\r\n      </Text>\r\n    </View>\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.welcomeText}>Welcome back,</Text>\r\n        <Text style={styles.nameText}>{user.name}</Text>\r\n      </View>\r\n\r\n      {renderTabs()}\r\n\r\n      <ScrollView\r\n        style={styles.content}\r\n        contentContainerStyle={styles.scrollContent}\r\n        showsVerticalScrollIndicator={false}\r\n      >\r\n        {filteredReports.length > 0 ? (\r\n          filteredReports.map(renderTaskCard)\r\n        ) : (\r\n          renderEmptyState()\r\n        )}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: COLORS.background,\r\n  },\r\n  header: {\r\n    padding: SPACING.lg,\r\n    backgroundColor: COLORS.primary,\r\n  },\r\n  welcomeText: {\r\n    ...FONTS.regular,\r\n    fontSize: FONTS.sizes.md,\r\n    color: COLORS.gray[100],\r\n  },\r\n  nameText: {\r\n    ...FONTS.bold,\r\n    fontSize: FONTS.sizes.xl,\r\n    color: COLORS.white,\r\n  },\r\n  tabContainer: {\r\n    flexDirection: 'row',\r\n    backgroundColor: COLORS.white,\r\n    padding: SPACING.sm,\r\n    ...SHADOWS.sm,\r\n  },\r\n  tab: {\r\n    flex: 1,\r\n    paddingVertical: SPACING.sm,\r\n    alignItems: 'center',\r\n    flexDirection: 'row',\r\n    justifyContent: 'center',\r\n    borderRadius: 8,\r\n  },\r\n  activeTab: {\r\n    backgroundColor: COLORS.primary,\r\n  },\r\n  tabText: {\r\n    ...FONTS.medium,\r\n    fontSize: FONTS.sizes.md,\r\n    color: COLORS.gray[600],\r\n  },\r\n  activeTabText: {\r\n    color: COLORS.white,\r\n  },\r\n  badge: {\r\n    backgroundColor: COLORS.danger,\r\n    borderRadius: 12,\r\n    paddingHorizontal: SPACING.sm,\r\n    paddingVertical: 2,\r\n    marginLeft: SPACING.xs,\r\n  },\r\n  badgeText: {\r\n    ...FONTS.bold,\r\n    fontSize: FONTS.sizes.xs,\r\n    color: COLORS.white,\r\n  },\r\n  content: {\r\n    flex: 1,\r\n  },\r\n  scrollContent: {\r\n    padding: SPACING.md,\r\n  },\r\n  card: {\r\n    marginBottom: SPACING.md,\r\n  },\r\n  emptyContainer: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    paddingVertical: SPACING.xl * 2,\r\n  },\r\n  emptyText: {\r\n    ...FONTS.medium,\r\n    fontSize: FONTS.sizes.lg,\r\n    color: COLORS.gray[400],\r\n    marginTop: SPACING.md,\r\n  },\r\n  emptySubtext: {\r\n    ...FONTS.regular,\r\n    fontSize: FONTS.sizes.md,\r\n    color: COLORS.gray[400],\r\n    marginTop: SPACING.xs,\r\n    textAlign: 'center',\r\n  },\r\n});\r\n\r\nexport default TechnicianDashboardScreen;\r\n","import React from 'react';\r\nimport {\r\n  View,\r\n  ScrollView,\r\n  StyleSheet,\r\n  Text,\r\n  TouchableOpacity,\r\n  Alert,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { COLORS, SPACING, FONTS, SHADOWS } from '../../styles/theme';\r\nimport Button from '../../components/common/Button';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { useNavigation, CommonActions } from '@react-navigation/native';\r\n\r\nconst ProfileScreen = () => {\r\n  const { user, logout } = useAuth();\r\n  const navigation = useNavigation();\r\n\r\n  const MenuOption = ({ icon, title, onPress, color = COLORS.gray[600] }) => (\r\n    <TouchableOpacity style={styles.menuOption} onPress={onPress}>\r\n      <View style={styles.menuIconContainer}>\r\n        <Ionicons name={icon} size={24} color={color} />\r\n      </View>\r\n      <Text style={[styles.menuText, { color }]}>{title}</Text>\r\n      <Ionicons name=\"chevron-forward\" size={20} color={COLORS.gray[400]} />\r\n    </TouchableOpacity>\r\n  );\r\n\r\n  const handleLogout = () => {\r\n    Alert.alert(\r\n      'Logout',\r\n      'Are you sure you want to logout?',\r\n      [\r\n        {\r\n          text: 'Cancel',\r\n          style: 'cancel',\r\n        },\r\n        {\r\n          text: 'Logout',\r\n          style: 'destructive',\r\n          onPress: async () => {\r\n            try {\r\n              const success = await logout();\r\n              if (success) {\r\n                // This is the key change - use navigation.replace instead\r\n                navigation.replace('Login');\r\n              }\r\n            } catch (error) {\r\n              console.error('Logout error:', error);\r\n              Alert.alert('Error', 'Failed to logout');\r\n            }\r\n          },\r\n        },\r\n      ],\r\n      { cancelable: false }\r\n    );\r\n  };\r\n\r\n  const getRoleColor = (role) => {\r\n    switch (role) {\r\n      case 'ADMIN':\r\n        return COLORS.primary;\r\n      case 'TECHNICIAN':\r\n        return COLORS.warning;\r\n      case 'STAFF':\r\n        return COLORS.success;\r\n      default:\r\n        return COLORS.gray[500];\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <View style={styles.header}>\r\n        <View style={styles.avatarContainer}>\r\n          <Text style={styles.avatarText}>\r\n            {user.name.split(' ').map(n => n[0]).join('')}\r\n          </Text>\r\n        </View>\r\n        <Text style={styles.name}>{user.name}</Text>\r\n        <View style={[styles.roleBadge, { backgroundColor: getRoleColor(user.role) }]}>\r\n          <Text style={styles.roleText}>{user.role}</Text>\r\n        </View>\r\n        <Text style={styles.email}>{user.email}</Text>\r\n      </View>\r\n\r\n      <View style={styles.section}>\r\n        <Text style={styles.sectionTitle}>Account Settings</Text>\r\n        <View style={styles.menuContainer}>\r\n          <MenuOption\r\n            icon=\"person-outline\"\r\n            title=\"Edit Profile\"\r\n            onPress={() => Alert.alert('Coming Soon', 'This feature will be available soon.')}\r\n          />\r\n          <MenuOption\r\n            icon=\"lock-closed-outline\"\r\n            title=\"Change Password\"\r\n            onPress={() => Alert.alert('Coming Soon', 'This feature will be available soon.')}\r\n          />\r\n          <MenuOption\r\n            icon=\"notifications-outline\"\r\n            title=\"Notification Settings\"\r\n            onPress={() => Alert.alert('Coming Soon', 'This feature will be available soon.')}\r\n          />\r\n        </View>\r\n      </View>\r\n\r\n      <View style={styles.section}>\r\n        <Text style={styles.sectionTitle}>App Settings</Text>\r\n        <View style={styles.menuContainer}>\r\n          <MenuOption\r\n            icon=\"moon-outline\"\r\n            title=\"Dark Mode\"\r\n            onPress={() => Alert.alert('Coming Soon', 'This feature will be available soon.')}\r\n          />\r\n          <MenuOption\r\n            icon=\"language-outline\"\r\n            title=\"Language\"\r\n            onPress={() => Alert.alert('Coming Soon', 'This feature will be available soon.')}\r\n          />\r\n        </View>\r\n      </View>\r\n\r\n      <View style={styles.section}>\r\n        <Text style={styles.sectionTitle}>Support</Text>\r\n        <View style={styles.menuContainer}>\r\n          <MenuOption\r\n            icon=\"help-circle-outline\"\r\n            title=\"Help Center\"\r\n            onPress={() => Alert.alert('Coming Soon', 'This feature will be available soon.')}\r\n          />\r\n          <MenuOption\r\n            icon=\"information-circle-outline\"\r\n            title=\"About\"\r\n            onPress={() => Alert.alert('About', 'Hospital Equipment Management System v1.0.0')}\r\n          />\r\n        </View>\r\n      </View>\r\n\r\n      <Button\r\n        title=\"Logout\"\r\n        onPress={handleLogout}\r\n        variant=\"outline\"\r\n        style={styles.logoutButton}\r\n        textStyle={{ color: COLORS.danger }}\r\n      />\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: COLORS.background,\r\n  },\r\n  header: {\r\n    backgroundColor: COLORS.white,\r\n    padding: SPACING.xl,\r\n    alignItems: 'center',\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLORS.gray[200],\r\n  },\r\n  avatarContainer: {\r\n    width: 80,\r\n    height: 80,\r\n    borderRadius: 40,\r\n    backgroundColor: COLORS.primary,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginBottom: SPACING.md,\r\n  },\r\n  avatarText: {\r\n    ...FONTS.bold,\r\n    fontSize: FONTS.sizes['2xl'],\r\n    color: COLORS.white,\r\n  },\r\n  name: {\r\n    ...FONTS.bold,\r\n    fontSize: FONTS.sizes.xl,\r\n    color: COLORS.gray[900],\r\n    marginBottom: SPACING.xs,\r\n  },\r\n  roleBadge: {\r\n    paddingHorizontal: SPACING.md,\r\n    paddingVertical: SPACING.xs,\r\n    borderRadius: 16,\r\n    marginBottom: SPACING.sm,\r\n  },\r\n  roleText: {\r\n    ...FONTS.medium,\r\n    fontSize: FONTS.sizes.xs,\r\n    color: COLORS.white,\r\n    textTransform: 'uppercase',\r\n  },\r\n  email: {\r\n    ...FONTS.regular,\r\n    fontSize: FONTS.sizes.md,\r\n    color: COLORS.gray[600],\r\n  },\r\n  section: {\r\n    marginTop: SPACING.xl,\r\n    paddingHorizontal: SPACING.lg,\r\n  },\r\n  sectionTitle: {\r\n    ...FONTS.bold,\r\n    fontSize: FONTS.sizes.md,\r\n    color: COLORS.gray[700],\r\n    marginBottom: SPACING.sm,\r\n  },\r\n  menuContainer: {\r\n    backgroundColor: COLORS.white,\r\n    borderRadius: 12,\r\n    ...SHADOWS.sm,\r\n  },\r\n  menuOption: {\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    padding: SPACING.md,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: COLORS.gray[200],\r\n  },\r\n  menuIconContainer: {\r\n    width: 40,\r\n    height: 40,\r\n    borderRadius: 20,\r\n    backgroundColor: COLORS.gray[100],\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    marginRight: SPACING.md,\r\n  },\r\n  menuText: {\r\n    ...FONTS.medium,\r\n    fontSize: FONTS.sizes.md,\r\n    flex: 1,\r\n  },\r\n  logoutButton: {\r\n    margin: SPACING.xl,\r\n    marginTop: SPACING.xl * 2,\r\n    borderColor: COLORS.danger,\r\n  },\r\n});\r\n\r\nexport default ProfileScreen;","import React, { useEffect } from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { USER_ROLES } from '../data/mockData';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { COLORS } from '../styles/theme';\r\n\r\n// Import all screens\r\nimport LoginScreen from '../screens/Auth/LoginScreen';\r\nimport EquipmentListScreen from '../screens/Equipment/EquipmentListScreen';\r\nimport EquipmentDetailsScreen from '../screens/Equipment/EquipmentDetailsScreen';\r\nimport QRScannerScreen from '../screens/QRScanner/QRScannerScreen';\r\nimport ReportsScreen from '../screens/Report/ReportsScreen';\r\nimport CreateReportScreen from '../screens/Report/CreateReportScreen';\r\nimport AdminDashboardScreen from '../screens/Admin/AdminDashboardScreen';\r\nimport TechnicianDashboardScreen from '../screens/Technician/TechnicianDashboardScreen';\r\nimport ProfileScreen from '../screens/Profile/ProfileScreen';\r\n\r\nconst Stack = createStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\n// Tab Navigator Component\r\nconst MainTabNavigator = () => {\r\n  const { user } = useAuth();\r\n\r\n  const getTabNavigator = () => {\r\n    switch(user?.role) {\r\n      case USER_ROLES.ADMIN:\r\n        return (\r\n          <Tab.Navigator\r\n            screenOptions={({ route }) => ({\r\n              tabBarIcon: ({ focused, color }) => {\r\n                let iconName;\r\n                if (route.name === 'Dashboard') {\r\n                  iconName = focused ? 'grid' : 'grid-outline';\r\n                } else if (route.name === 'Equipment') {\r\n                  iconName = focused ? 'medical' : 'medical-outline';\r\n                } else if (route.name === 'Reports') {\r\n                  iconName = focused ? 'document-text' : 'document-text-outline';\r\n                } else if (route.name === 'Profile') {\r\n                  iconName = focused ? 'person' : 'person-outline';\r\n                }\r\n                return <Ionicons name={iconName} size={24} color={color} />;\r\n              },\r\n              tabBarActiveTintColor: COLORS.primary,\r\n              tabBarInactiveTintColor: COLORS.gray[400],\r\n              tabBarStyle: {\r\n                backgroundColor: COLORS.white,\r\n                borderTopWidth: 1,\r\n                borderTopColor: COLORS.gray[200],\r\n                paddingBottom: 5,\r\n                paddingTop: 5,\r\n              },\r\n            })}\r\n          >\r\n            <Tab.Screen name=\"Dashboard\" component={AdminDashboardScreen} />\r\n            <Tab.Screen name=\"Equipment\" component={EquipmentListScreen} />\r\n            <Tab.Screen name=\"Reports\" component={ReportsScreen} />\r\n            <Tab.Screen name=\"Profile\" component={ProfileScreen} />\r\n          </Tab.Navigator>\r\n        );\r\n      \r\n      case USER_ROLES.TECHNICIAN:\r\n        return (\r\n          <Tab.Navigator\r\n            screenOptions={({ route }) => ({\r\n              tabBarIcon: ({ focused, color }) => {\r\n                let iconName;\r\n                if (route.name === 'Dashboard') {\r\n                  iconName = focused ? 'grid' : 'grid-outline';\r\n                } else if (route.name === 'Equipment') {\r\n                  iconName = focused ? 'medical' : 'medical-outline';\r\n                } else if (route.name === 'Scan') {\r\n                  iconName = focused ? 'qr-code' : 'qr-code-outline';\r\n                } else if (route.name === 'Profile') {\r\n                  iconName = focused ? 'person' : 'person-outline';\r\n                }\r\n                return <Ionicons name={iconName} size={24} color={color} />;\r\n              },\r\n              // Same style options as above\r\n            })}\r\n          >\r\n            <Tab.Screen name=\"Dashboard\" component={TechnicianDashboardScreen} />\r\n            <Tab.Screen name=\"Equipment\" component={EquipmentListScreen} />\r\n            <Tab.Screen name=\"Scan\" component={QRScannerScreen} />\r\n            <Tab.Screen name=\"Profile\" component={ProfileScreen} />\r\n          </Tab.Navigator>\r\n        );\r\n      \r\n      default: // STAFF\r\n        return (\r\n          <Tab.Navigator\r\n            screenOptions={({ route }) => ({\r\n              tabBarIcon: ({ focused, color }) => {\r\n                let iconName;\r\n                if (route.name === 'Equipment') {\r\n                  iconName = focused ? 'medical' : 'medical-outline';\r\n                } else if (route.name === 'Scan') {\r\n                  iconName = focused ? 'qr-code' : 'qr-code-outline';\r\n                } else if (route.name === 'Reports') {\r\n                  iconName = focused ? 'document-text' : 'document-text-outline';\r\n                } else if (route.name === 'Profile') {\r\n                  iconName = focused ? 'person' : 'person-outline';\r\n                }\r\n                return <Ionicons name={iconName} size={24} color={color} />;\r\n              },\r\n              // Same style options as above\r\n            })}\r\n          >\r\n            <Tab.Screen name=\"Equipment\" component={EquipmentListScreen} />\r\n            <Tab.Screen name=\"Scan\" component={QRScannerScreen} />\r\n            <Tab.Screen name=\"Reports\" component={ReportsScreen} />\r\n            <Tab.Screen name=\"Profile\" component={ProfileScreen} />\r\n          </Tab.Navigator>\r\n        );\r\n    }\r\n  };\r\n\r\n  return getTabNavigator();\r\n};\r\n\r\nconst AppNavigator = () => {\r\n  const { isAuthenticated, loading } = useAuth();\r\n\r\n  useEffect(() => {\r\n    console.log('[AppNavigator] Auth state updated', { \r\n      isAuthenticated, \r\n      loading \r\n    });\r\n  }, [isAuthenticated, loading]);\r\n\r\n  if (loading) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator>\r\n        {isAuthenticated ? (\r\n          <Stack.Screen\r\n            name=\"MainApp\"\r\n            component={MainTabNavigator}\r\n            options={{ headerShown: false }}\r\n          />\r\n        ) : (\r\n          <Stack.Screen\r\n            name=\"Login\"\r\n            component={LoginScreen}\r\n            options={{ \r\n              headerShown: false,\r\n              animationTypeForReplace: isAuthenticated ? 'push' : 'pop'\r\n            }}\r\n          />\r\n        )}\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default AppNavigator;","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","import 'react-native-gesture-handler';\nimport React from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { StatusBar } from 'expo-status-bar';\nimport { AuthProvider } from './src/contexts/AuthContext';\nimport AppNavigator from './src/navigation/AppNavigator';\nimport { COLORS } from './src/styles/theme';\nimport { LogBox } from 'react-native';\n\nexport default function App() {\n  // Ignore specific warnings (optional but recommended)\n  LogBox.ignoreLogs([\n    'AsyncStorage has been extracted',\n    'Setting a timer',\n    'Remote debugger'\n  ]);\n\n  return (\n    <SafeAreaProvider>\n      <StatusBar style=\"light\" backgroundColor={COLORS.primary} />\n      <AuthProvider>\n        <AppNavigator />\n      </AuthProvider>\n    </SafeAreaProvider>\n  );\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [327], () => (__webpack_require__(4247)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["users","id","username","password","role","name","email","equipment","modelNumber","serialNumber","department","status","dateAcquired","maintenanceInterval","lastMaintenance","nextMaintenance","assignedTechnician","qrCode","image","reports","equipmentId","reporterId","description","severity","dateReported","imageUrl","technicianNotes","estimatedFixTime","notifications","userId","title","message","isRead","createdAt","dashboardData","totalEquipment","underMaintenance","overdueRepairs","monthlyStats","labels","datasets","data","departmentUsage","ICU","Radiology","Emergency","Surgery","STATUS_TYPES","AVAILABLE","IN_USE","UNDER_MAINTENANCE","OUT_OF_ORDER","SEVERITY_LEVELS","LOW","MEDIUM","HIGH","REPORT_STATUS","PENDING","IN_PROGRESS","COMPLETED","USER_ROLES","ADMIN","TECHNICIAN","STAFF","AuthContext","createContext","AuthProvider","children","user","setUser","useState","loading","setLoading","useEffect","loadStoredUser","async","storedUser","AsyncStorage","getItem","JSON","parse","error","console","value","login","Promise","resolve","setTimeout","foundUser","find","u","userWithoutPassword","_objectWithoutPropertiesLoose","_excluded","setItem","stringify","success","Error","logout","removeItem","isAuthenticated","_jsx","Provider","useAuth","context","useContext","COLORS","FONTS","fontFamily","fontWeight","xs","sm","md","lg","xl","SPACING","SHADOWS","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","styles","StyleSheet","create","button","borderRadius","justifyContent","alignItems","flexDirection","text","Object","assign","fontSize","textAlign","fullWidth","disabled","opacity","Button","onPress","variant","size","style","textStyle","getTextColor","TouchableOpacity","getVariantStyles","backgroundColor","borderColor","borderWidth","getSizeStyles","paddingVertical","paddingHorizontal","ActivityIndicator","color","Text","container","marginBottom","label","inputContainer","input","flex","minHeight","multiline","multilineInput","textAlignVertical","inputError","inputDisabled","errorText","marginTop","leftIcon","position","left","zIndex","rightIcon","right","Input","onChangeText","placeholder","secureTextEntry","keyboardType","autoCapitalize","containerStyle","onRightIconPress","numberOfLines","isPasswordVisible","setIsPasswordVisible","_jsxs","View","Ionicons","TextInput","paddingLeft","paddingRight","placeholderTextColor","editable","scrollContent","flexGrow","content","padding","logo","form","loginButton","demoCredentials","demoButton","marginHorizontal","LoginScreen","credentials","setCredentials","setError","KeyboardAvoidingView","behavior","ScrollView","contentContainerStyle","keyboardShouldPersistTaps","Image","source","uri","resizeMode","prev","result","err","overflow","header","titleContainer","flexWrap","marginRight","subtitle","marginLeft","statusText","textTransform","badgeContainer","badge","badgeText","Card","statusColor","imageStyle","badges","getStatusColor","toUpperCase","CardContent","length","map","index","activeOpacity","borderBottomWidth","borderBottomColor","searchContainer","searchIcon","searchInput","addButton","list","card","EquipmentListScreen","navigation","searchQuery","setSearchQuery","filteredEquipment","filter","item","toLowerCase","includes","navigate","FlatList","renderItem","Date","toLocaleDateString","keyExtractor","showsVerticalScrollIndicator","errorContainer","statusBadge","infoSection","infoRow","infoLabel","infoIcon","infoLabelText","infoValue","actions","reportButton","qrButton","headerButton","SCAN_AREA_SIZE","Dimensions","get","camera","overlay","scanArea","cornerTL","top","borderTopWidth","borderLeftWidth","cornerTR","borderRightWidth","cornerBL","bottom","cornerBR","margin","instructions","QRScannerScreen","hasPermission","setHasPermission","scanned","setScanned","requestCameraPermission","Camera","requestCameraPermissionsAsync","type","Constants","Type","back","barCodeScannerSettings","barCodeTypes","BarCodeScanner","BarCodeType","qr","onBarCodeScanned","undefined","handleBarCodeScanned","foundEquipment","replace","alert","filterButtons","filterButton","filterButtonActive","filterButtonText","filterButtonTextActive","reportCard","reportHeader","equipmentInfo","equipmentName","alignSelf","severityBadge","severityText","reportFooter","reporterInfo","reporterName","date","emptyContainer","emptyText","createButton","ReportsScreen","filterStatus","setFilterStatus","getSeverityColor","getEquipmentName","e","getReporterName","filteredReports","report","renderReport","ListEmptyComponent","renderEmpty","equipmentImage","equipmentDetails","gap","severityContainer","severityHeader","severityInput","severityButtons","severityButton","imagePickerButton","borderStyle","imagePickerContent","pickedImage","addPhotoButton","submitButton","StatCard","icon","statCard","pressable","iconContainer","statValue","statTitle","statsGrid","minWidth","section","sectionHeader","sectionTitle","seeAllButton","seeAllText","departmentStats","departmentRow","departmentName","usageBarContainer","usageBar","usageText","AdminDashboardScreen","recentReports","sort","a","b","slice","entries","dept","usage","welcomeText","nameText","tabContainer","tab","activeTab","tabText","activeTabText","emptySubtext","TechnicianDashboardScreen","setActiveTab","technicianReports","equipmentItem","getEquipmentDetails","r","avatarContainer","avatarText","roleBadge","roleText","menuContainer","menuOption","menuIconContainer","menuText","logoutButton","ProfileScreen","useNavigation","MenuOption","split","n","join","getRoleColor","Alert","handleLogout","cancelable","Stack","createStackNavigator","Tab","createBottomTabNavigator","MainTabNavigator","getTabNavigator","Navigator","screenOptions","route","tabBarIcon","focused","iconName","tabBarActiveTintColor","tabBarInactiveTintColor","tabBarStyle","borderTopColor","paddingBottom","paddingTop","Screen","component","AppNavigator","log","NavigationContainer","options","headerShown","animationTypeForReplace","registerRootComponent","LogBox","ignoreLogs","SafeAreaProvider","StatusBar","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","key","splice","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","this","Function","window","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}